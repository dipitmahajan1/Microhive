["<h4>Sluggish news reactions: A combinatorial approach for ", "<h4>synchronizing stock jumps ", "", "<h1>ECONOMIC RESEARCH ", "<h6>FEDERAL RESERVE BANK OF ST. LOUIS ", "<h6>WORKING PAPER SERIES ", "", "<s5>Authors  Nabil Bouamara, Kris Boudt, S\u00e9bastien Laurent, and Christopher J. Neely ", "<s5>Working Paper Number  2024-006A ", "<s5>Creation Date  March 2024 ", "<s5>Citable Link  https://doi.org/10.20955/wp.2024.006 ", "<s5>Suggested Citation ", "<s5>Bouamara, N., Boudt, K., Laurent, S., Neely, C.J., 2024; Sluggish news reactions: A  combinatorial approach for synchronizing stock jumps, Federal Reserve Bank of St.  Louis Working Paper 2024-006. URL  https://doi.org/10.20955/wp.2024.006 ", "", "<h6>Federal Reserve Bank of St. Louis, Research Division, P.O. Box 442, St. Louis, MO 63166 ", "", "<s7>The views expressed in this paper are those of the author(s) and do not necessarily reflect the views of the Federal Reserve  System, the Board of Governors, or the regional Federal Reserve Banks. Federal Reserve Bank of St. Louis Working Papers ", "<s7>are preliminary materials circulated to stimulate discussion and critical comment. ", "", "<h2>Sluggish news reactions: A combinatorial  approach for synchronizing stock jumps", "<h5>\u2217 ", "<h5>Nabil Bouamara  Research Division, National Bank of Belgium ", "<h5>Kris Boudt  Department of Economics, Ghent University  Solvay Business School, Vrije Universiteit Brussel  School of Business and Economics, Vrije Universiteit Amsterdam ", "<h5>S\u00b4  ebastien Laurent  Aix Marseille Univ., CNRS, AMSE, Marseille, France  Aix-Marseille Graduate School of Management-IAE ", "<h5>Christopher J. Neely  Research Division, Federal Reserve Bank of St. Louis ", "", "March 26, 2024 ", "", "<s2>Abstract ", "<s2>Stock prices often react sluggishly to news, producing gradual jumps and jump  delays. Econometricians typically treat these sluggish reactions as microstructure e\ufb00ects  and settle for a coarse sampling grid to guard against them. Synchronizing mistimed  stock returns on a \ufb01ne sampling grid allows us to better approximate the true common  jumps in related stock prices. ", "", "Keywords:  Asynchronicity; Cojumps; High-frequency data; Microstructure noise; Real-  ized Covariance; Rearrangement ", "JEL: C02, C58, G11, G14 ", "", "<s12>\u2217", "We have received helpful comments and suggestions from Andres Algaba, Geert Dhaene, Jean-Yves  Gnabo, Roxana Halbleib, Ilze Kalnina, Nathan Lassance, Oliver Linton, Andr\u00b4  e Lucas, Kristien Smedts,  Lisa Van den Branden, Steven Vandu\ufb00el, Brecht Verbeken, and the conference and seminar participants  at KU Leuven, Vrije Universiteit Brussel, Vrije Universiteit Amsterdam, the Computational and Financial  Econometrics Conference (2021), the Belgian Financial Research Forum (2023), the Quantitative and Fi-  nancial Econometrics Conference (2023), and the Society of Financial Econometrics Summer School (2023).  Nabil Bouamara gratefully acknowledges support from the Flemish Research Foundation (FWO fellowship  #11F8419N) and the Platform for Education and Talent (Gustave Bo\u00a8  el \u2013 So\ufb01na fellowship). S\u00b4  ebastien Lau-  rent has received fundings from the french government under the \u201cFrance 2030\u201d investment plan managed  by the French National Research Agency (reference: ANR-17-EURE-0020 and ANR-21-CE26-0007-01) and  from Excellence Initiative of Aix-Marseille University - A*MIDEX. The views expressed in this paper are  those of the author(s) and do not necessarily re\ufb02ect the views of the Federal Reserve System, the Board of  Governors, the regional Federal Reserve Banks, or the National Bank of Belgium. Federal Reserve Bank of  St. Louis Working Papers are preliminary materials circulated to stimulate discussion and critical comment. ", "", "1 ", "", "<h3>1  Introduction ", "", "Major economic news, such as FOMC announcements, natural disasters, or geopolitical con-  \ufb02icts, impact \ufb01nancial markets by triggering jumps in related high-frequency stock prices (Li  et al., 2017, document empirical examples of this phenomenon). Statistical tests for these  common jump events, known as \u201ccojump tests\u201d, implicitly assume that jumps happen at the  same time across all relevant assets but, in fact, jumps occur asynchronously in transaction  data. Empirical studies support this view: stock prices can move sluggishly (Bandi et al.,  2017), jumps may develop gradually (Barndor\ufb00-Nielsen et al., 2009), jumps of less-liquid in-  dividual assets typically lag those of the more-liquid market index (Li et al., 2017), and at an  ultra-high frequency, cojumps are spurious (Bajgrowicz et al., 2016). Most researchers have  dealt with this problem by settling for a coarse sampling grid (Barndor\ufb00-Nielsen et al., 2009;  Bollerslev et al., 2008; Lahaye et al., 2011; Li et al., 2019). Such a coarse grid guards against  microstructure e\ufb00ects, the frictions with which actual trades take place, but it is restrictive  in that it oversmooths actual changes (A\u00a8  \u0131t-Sahalia, 2004).  We propose an alternative approach to recover the common jump in a basket of stocks  on a \ufb01ne sampling grid. Our method assumes that the exchange-traded fund (ETF) price  tracks the latent, equilibrium (also often called \u201ce\ufb03cient\u201d) value of a stock index, and that  sluggish news impoundment creates a spread between the value of a synthetic index and the  e\ufb03cient ETF price. We rearrange stock price jumps in time to minimize this spread and thus  (approximately) recover the latent, common, e\ufb03cient jump.  Combinatoric methods optimally rearrange asynchronous jumps. We extend the pioneer-  ing work of Puccetti and R\u00a8  uschendorf (2012) and Embrechts et al. (2013) on rearrangements.  Their algorithm is best known for actuarial applications, but can also be applied to other  disciplines, such as option pricing ( e.g. , Bondarenko and Bernard, 2023) and operations re-  search ( e.g. , Boudt et al., 2018). Rearrangements can also synchronize stock jumps on a \ufb01ne  sampling grid, provided we penalize economically implausible rearrangements. For example,  we only allow for a rearrangement of jumps backward in time because we assume that stock  prices are sluggish and lag the highly liquid and carefully watched ETF, they do not lead it.  To operationalize this, we introduce the \u201cRearrangement Mixed-Integer Linear Program.\u201d  We apply our methods to investigate the reactions of Dow 30 stock prices in event win-  dows around DIA ETF jumps. For example, the Federal Reserve announced rate cuts on  September 18, 2007, at 14:15 US Eastern Time, after which markets took up to \ufb01ve minutes  to incorporate the Fed\u2019s news into the Dow 30 stock\u2019s prices. Rearrangements synchronize 19  (out of 23) scattered stock jumps with the ETF jump, approximately recovering the common  jump in the stocks. This is not an isolated incident: our linear program rearranges stock  jumps during 180 separate cojump events.  Synchronizing mistimed stock returns improves estimates of the daily realized covariance  matrix and improves the out-of-sample \ufb01nancial performance compared to using raw returns.  While other estimators, like the multivariate realized kernel in Barndor\ufb00-Nielsen et al. (2011)  or a Cholesky factorization in Boudt et al. (2017), protect against mild market microstructure  noise and the Epps (1979) e\ufb00ect (that is, the downward bias in covariance estimates due to  asynchronous trading), they do not protect against the underestimation of jump dependence  due to asynchronous jumps.  We proceed as follows. Section 2 details the synchronization method using a toy example.  Section 3 illustrates an empirical example of a rearranged sluggish cojump in the Dow 30  and includes a portfolio allocation exercise. Section 4 concludes. ", "2 ", "", "<h3>2  Synchronizing jumps: A combinatorial problem ", "", "<p>Trading is non-synchronous at high frequencies; This leads to so-called \u201cstale\u201d prices at irregu-  larly spaced times, di\ufb00ering across assets. Addressing asynchronicity through the coordinated  collection of multivariate data has been an active area of research in \ufb01nancial econometrics in  recent years, see  e.g. , Barndor\ufb00-Nielsen et al. (2011) or Boudt et al. (2017) and the references  therein, and the topic has been integral to covariance estimations since at least Epps (1979).  Nonetheless, existing sampling schemes like refresh-time sampling (Barndor\ufb00-Nielsen et al.,  2011), are not designed to handle price jumps, because stale prices are not the only cause of  asynchronous jumps. Sometimes asset prices may be \u201csluggish\u201d; news might be impounded  in prices with a delay, although the asset is trading. To address this problem, we synchronize  the timing of multivariate jumps using what we call \u201cJump Sampling\u201d. This technique re\ufb01nes  the detection of high-frequency cojumps and the realized covariance matrix.  Figure 1 compares refresh-time sampling to jump sampling in the presence of asyn-  chronous observations and jumps. It draws inspiration from Figure 1 in Barndor\ufb00-Nielsen  et al. (2011), illustrating refresh-time in a situation with three assets (without jumps). We  expand upon this concept to include scenarios with asynchronous price jumps, focusing on  three assets: a basket instrument and its two underlying stocks. In each asset\u2019s case, the  \ufb01lled dots in Figure 1 indicate the updates in posted prices, and an open dot pinpoints the  time at which the price jumps. Vertical dashed lines represent the sampling times generated  from the three assets, using refresh-time sampling. For example, the \ufb01rst black dot repre-  sents the time it has taken for all three assets to trade. But because asynchronous jumps are  typically not solely attributed to (il)liquidity issues", "<s8>1", ", refresh-time sampling does not resolve  the asynchronicity inherent in the jumps.  To confront asynchronicity, our new jump sampling scheme generally rearranges mist-  imed jumps to occur simultaneously with the ETF jump, as shown in the lower section of  the diagram. In what follows, we detail how we optimally rearrange jumps, penalizing eco-  nomically implausible rearrangements. A simulated example clari\ufb01es the mechanics of the  rearrangements. ", "", "<h5>2.1  A DGP for sluggish news reactions ", "", "<p>We assume a data generating process with gradual and delayed jumps for the prices of the  stocks in the index.", "<s8>2", "<p>Trading frictions may prevent the observed prices from immediately  re\ufb02ecting a jump in the underlying equilibrium price.  The conventional martingale-plus-  noise price model does not capture such complications, which are important in the empirical  analysis of multivariate jump processes.  Let  X", "<s8>t", "<p> = ( X", "<s8>1 ,t", "<p>, ..., X", "<s8>p,t", "<p>)", "<s8>\u22a4", "<p>denote the logarithmic  p -variate, equilibrium (or so-called \u201ce\ufb03-  cient\u201d) price of the  p  stocks in the market index. The price process is de\ufb01ned on a \ufb01ltered  probability space (\u2126 ,  F ,  ( F )", "<s8>t \u2265 0", "<p>,  P ) and is adapted to the \ufb01ltration  F", "<s8>t", " that represents infor- ", "", "<s12>1", "Asynchronous jumps in asset prices happen for several reasons, not just di\ufb00erences in liquidity. Assets  may react di\ufb00erently to news based on the traders involved, their beliefs, and actions. For example, major  news like the FOMC statement on September 18, 2007, discussed in Section 3.2, triggered an increase in  trading, unlike the typical activity seen throughout the rest of the day (not reported). This suggests that  time variation in trading intensity contributes to asynchronous jumps. ", "", "<s12>2", "Gradual jumps are when the prices exhibit strong linear trends for periods of a few minutes (Barndor\ufb00-  Nielsen et al., 2009). Jump delays are when jumps of individual assets follow those of the highly liquid market  index during market-wide events (Li et al., 2017). ", "", "3 ", "Figure 1: Jump sampling ", "ETF ", "Stock A ", "Stock B ", "Refresh-Time ", "Rearranged  Jumps  Time ", "", "<s2>Note: This diagrams compares refresh-time sampling to jump sampling in the presence of asyn-  chronous observations and jumps. In each asset\u2019s case, the \ufb01lled dots indicate when the posted  prices were updated, and the open dot represents the time at which the price jumps. The verti-  cal dashed lines represent the sampling times generated from the three assets using refresh-time  sampling. Jump sampling rearranges mistimed jumps to occur simultaneously with the ETF  jump. ", "", "mation available to market participants at time  t , with  t  \u2265 0. We assume that  X  operates  in an arbitrage-free, frictionless market, which implies that  X  is a semimartingale. Econo-  metricians (see A\u00a8  \u0131t-Sahalia and Jacod, 2014) model stock prices as a jump-di\ufb00usion process: ", "<p>X", "<s8>t", "<p> =  X", "<s8>c  t", "<p>+  X", "<s8>d  t", ",  with , ", "<p>X", "<s8>c  t", "<p>:=  X", "<s8>0", "<p>+  Z", "<s8> t ", "<s8>0 ", "<p>b", "<s8>s", "<p>ds  +  Z", "<s8> t ", "<s8>0 ", "<p>\u03c3", "<s8>s", "<p>dW", "<s8>s", ", ", "<p>X", "<s8>d  t", ":=  P ", "", "<s8>s \u2264 t", "<p>\u2206 X", "<s8>s", ", ", "(1) ", "<p>in which  t  \u2265 0,  b  is the drift,  \u03c3  is the stochastic (co)volatility,  W  is a multivariate Brownian  motion and \u2206 X", "<s8>t", "<p> :=  X", "<s8>t", "<p>\u2212 X", "<s8>t \u2212", "<p>, with  X", "<s8>t \u2212", "the left limit at time  t , denotes the jumps of  X  at time  t . A stock\u2019s growth prospects generates a jump in single stock price (Christensen et al., 2023;  Lee and Mykland, 2008) but major economic news, such as pre-scheduled announcements,  natural disasters or geopolitical con\ufb02icts, trigger common ( i.e. , synchronous) jumps in related  stock prices (see Li et al., 2017, for examples).  In practice we observe discretely sampled, noisy transaction prices, rather than the la-  tent process in (1). Frictions such as tick size, discrete observations, bid-ask spreads, adverse  selection, liquidity and inventory control produce market microstructure noise (see  e.g. , Chris-  tensen et al., 2014; Lee and Mykland, 2012; Li and Linton, 2022). Additionally, prices may  also be sluggish; market participants must trade to reveal private information and reach a ", "4 ", "<p>consensus about the impact of some piece of news. If trades do not occur at the time of  a jump in the underlying e\ufb03cient price, then observed reactions can be delayed. That is,  jumps in observed prices can lag those in the e\ufb03cient price, even if market participants are  constantly aware of fundamentals.  We model the observed log price process  Y", "<s8>t", "<p> = ( Y", "<s8>1 ,t", "<p>, ..., Y", "<s8>p,t", "<p>)", "<s8>\u22a4", "<p>of the  p  stocks as contami-  nated version of (1), observed at discrete time points  i \u2206", "<s8>n", "<p>, with  i  = 0 , ...,  \u230a T/ \u2206", "<s8>n", "\u230b , across a  time span  T , where  \u230a\u00b7\u230b denotes the \ufb02oor function: ", "<p>Y", "<s8>i \u2206", "<s14>n", "<p> =  Y", "<s8>c  i \u2206", "<s14>n", "<p>+  Y", "<s8> d  i \u2206", "<s14>n", "<p>,  with ,  Y", "<s8>c  i \u2206", "<s14>n", "<p>:=  X", "<s8>c  i \u2206", "<s14>n", "<p>+  u", "<s8>i \u2206", "<s14>n", ", ", "<p>Y", "<s8>d  i \u2206", "<s14>n", ":=  P ", "", "<s8>h \u2206", "<s14>n", "<s8>\u2264 i \u2206", "<s14>n", "<p>\u2206 Y", "<s8>h \u2206", "<s14>n", ". ", "(2) ", "<p>There are two kinds of noise in (2): microstructure noise and mistimed jumps. Microstructure  noise  u  contaminates the e\ufb03cient price process  X , but is typically too small to substantially  contaminate the discontinuous part  X", "<s8>d", "<p>. It cannot generate gradual jumps (as in Barndor\ufb00-  Nielsen et al., 2009) or jump delays (as in Li et al., 2017). We capture the mistimed or  mismeasured jumps in a separate noisy jump component  Y", "<s8>d", "<p>, allowing a sluggish news reac-  tion, which spreads the stock jump across several time intervals.  Figure 2 shows a simulated sample path of this new DGP (2) for second-by-second prices  of a single stock. The gray path in the top panel of Figure 2 illustrates that the e\ufb03cient stock  price jumps at 12:45 in reaction to news. In the following 112 seconds, the observed price (in  black) catches up with the new equilibrium level (in gray) by gradually matching the jump.  The middle and bottom panels respectively decompose the price process into its continuous  Brownian component and its discrete jump component.  The middle panel compares the  e\ufb03cient, continuous price trajectory with that contaminated by mild market microstructure  noise. The bottom panel compares the e\ufb03cient, abrupt jump with the contaminated, more  gradual jump. Our assumed DGP uses a step function to model the incorporation of news  into observed prices. Appendix A shows how this assumed DGP spreads the jump across  several time intervals.  The observed price process (2) combines the frictions and the sampling frequency. There  is less noise on a coarse sampling grid,  i.e. , at a lower sampling frequency \u2206", "<s8>n", ", but data  at such lower frequencies tend to oversmooth actual changes (as in Bollerslev et al., 2008;  Lahaye et al., 2011; Li et al., 2019). The \ufb01ner the sampling grid, the higher the probability  that a jump can be recognized as such (A\u00a8  \u0131t-Sahalia, 2004). ", "", "<h5>2.2  Collecting asynchronous jumps in a jump-event matrix ", "", "When multiple stocks react sluggishly to new information, their jumps will generally be  asynchronous on a \ufb01ne sampling grid, and, because of this, these jumps will not all coincide  with the jump in the price of an index-tracking ETF. Empirical evidence corroborates this  prediction: jumps of less-liquid individual assets typically lag those of the more-liquid market  index (Li et al., 2017) and the ETF jumps more often than a synthetically constructed index  of stocks (Bollerslev et al., 2008). ", "2.2.1  The spread measures sluggishness in high-frequency data ", "<p>Let  w", "<s8>k,t", "<p>, with  k  = 1 , ..., p , be the weights allocated to each stock in the market index at each  moment in time. The price of the synthetically constructed index portfolio,  S", "<s8>i \u2206", "<s14>n", ", is a linear ", "5 ", "Figure 2: The discontinuous component of a stock\u2019s price may react sluggishly to news ", "", "<s9>0.012  0.016  0.020  0.024 ", "<s9>Time ", "<s9>log Price ", "<s9>12:41  12:42  12:43  12:44  12:45  12:46  12:47  12:48  12:49 ", "<s9>Efficient  Observed ", "<s9>0.0125  0.0135  0.0145 ", "<s9>Continuous part of the log price ", "<s9>12:41  12:42  12:43  12:44  12:45  12:46  12:47  12:48  12:49 ", "<s9>Efficient  Observed ", "<s9>0.000  0.004  0.008  0.012 ", "<s9>Discontinuous part of the log price ", "<s9>12:41  12:42  12:43  12:44  12:45  12:46  12:47  12:48  12:49 ", "<s9>Efficient  Observed ", "", "<s2>Note: We plot the decomposition of the e\ufb03cient (1) and observed (2) log price process for  one sample path during a short event window. We simulate second-by-second (\u2206", "<s8>n", "<s2> = 1 / 23 ,  401)  e\ufb03cient and observed prices for 1 stock across one trading day. The top panel shows the log price.  The middle panel shows the continuous part of the log price, and the bottom panel shows the  discontinuous part of the log price. The e\ufb03cient stock price jumps at  i \u2206", "<s8>n", "<s2> = 11 ,  701 or 12:45:00.  Mild market microstructure noise contaminates the continuous part of the price process, while  delays in the jump process contaminate the discontinuous part of the price process. ", "", "combination of the observed stock prices in (2), sluggishly incorporating its jump component: ", "<p>S", "<s8>i \u2206", "<s14>n", " = ", "", "<s8>p ", "X ", "", "<s8>k =1 ", "<p>w", "<s8>k,i \u2206", "<s14>n", "<p>Y", "<s8>k,i \u2206", "<s14>n", ".  (3) ", "<p>An ETF log price process,  Z", "<s8>t", "<p>, tracks an index of the  p  stocks. We assume that the observed  log price,  Z", "<s8>t", ", replicates a portfolio of e\ufb03ciently priced stocks (1), e\ufb03ciently incorporating ", "6 ", "<p>their jumps", "<s8>3", ": ", "<p>Z", "<s8>t", " = ", "", "<s8>p ", "X ", "", "<s8>k =1 ", "<p>w", "<s8>k,t", "<p>X", "<s8>k,t", ".  (4) ", "The deviation or spread in prices is the di\ufb00erence between the observed prices on a  synthetic index of stocks (4) and the prices of an observable ETF trading the index (3): ", "<p>\u03b4", "<s8>p  i \u2206", "<s14>n", "<p>:=  S", "<s8>i \u2206", "<s14>n", "<p>\u2212 Z", "<s8>i \u2206", "<s14>n", ".  (5) ", "<p>Similarly, we can also de\ufb01ne the spread in returns as the di\ufb00erence between the observed  returns on a synthetic index of stocks \u2206", "<s8>n  i", "<p>S  :=  P", "<s8>p  k =1", "<p>w", "<s8>k,i \u2206", "<s14>n", "<p>\u2206", "<s8>n  i", "<p>Y", "<s8>k", "<p>and the returns of an ob-  servable ETF trading the index \u2206", "<s8>n  i", "<p>Z  :=  Z", "<s8>i \u2206", "<s14>n", "<p>\u2212 Z", "<s8>( i \u2212 1)\u2206", "<s14>n", "or, equivalently, the percentage  change of the price spread in (5): ", "<p>\u03b4", "<s8>r  i \u2206", "<s14>n", "<p>:=  \u03b4", "<s8>p  i \u2206", "<s14>n", "<p>\u2212 \u03b4", "<s8>p  ( i \u2212 1)\u2206", "<s14>n", "<p>= \u2206", "<s8>n  i", "<p>S  \u2212 \u2206", "<s8>n  i", "Z.  (6) ", "<p>In the absence of microstructure noise or sluggish prices, we would expect the ETF log  price  Z  to equal the synthetic log price  S . However, these types of noise cause the price of the  synthetic index portfolio to deviate from the presumably e\ufb03cient price of an ETF tracking  the index.", "<s8>4", "<p>The sluggish jump component is much larger than microstructure noise, so asyn-  chronous impoundment of news drives the spread in prices. Hence, the spread (5) between  the ETF price and a synthetically constructed index acts as a measure of \u201csluggishness\u201d \u2013  the collective misalignment of noisy stock prices with their e\ufb03cient levels. The goal is to  rearrange these jumps in time, essentially changing their time labels, to minimize the spread  and approximately recover the latent e\ufb03cient price.  To illustrate our procedures, we consider a stylistic 3-stock universe ( p  = 3) and a cor-  responding ETF, in which stock prices vary in how quickly they impound news. The stock  names A, B and C correspond to the indices  k  = 1 ,  2 and 3. The ABC ETF price is an  equally weighted average of the underlying stocks\u2019 e\ufb03cient prices (4) and the synthetic ABC  portfolio is an equally weighted average of the stocks\u2019 observed prices (3). The sampling  frequency is one minute (i.e., \u2206", "<s8>n", " = 1 / 391).  Consider the following time series, where each row in the vectors represents a consecutive  time interval, showing a segment of the returns of the three stocks and the ABC ETF: ", "<p>\u2206", "<s8>n  i", "<p>Y", "<s8>1", "= ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8f0 ", ".  .  .  \u2212 0 . 018  \u2212 0 . 031  \u2212 0 . 057  0 . 629  0 . 651 ", ".  .  . ", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fb ", "<p>,  \u2206", "<s8>n  i", "<p>Y", "<s8>2", "= ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8f0 ", ".  .  .  0 . 015  \u2212 0 . 067  \u2212 0 . 029  1 . 201  0 . 062  .  .  . ", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fb ", "<p>,  \u2206", "<s8>n  i", "<p>Y", "<s8>3", "= ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8f0 ", ".  .  .  \u2212 0 . 120  \u2212 0 . 104  0 . 088  0 . 017  0 . 074  .  .  . ", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fb ", "<p>,  and \u2206", "<s8>n  i", "Z  = ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8f0 ", ".  .  .  \u2212 0 . 039  \u2212 0 . 071  0 . 807  0 . 001  0 . 073  .  .  . ", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fb ", ",  (8) ", "", "<s12>3", "To simplify our notation, we rely on a weighted average of individual log returns as opposed to simple  returns. This di\ufb00erence is considered as minor in empirical applications (Jondeau, Poon, and Rockinger,  2007, pp. 9). ", "", "<s12>4", "Within our theoretical model descriptions, the di\ufb00erence between the price of the synthetic index and  the ETF price (5) equals a microstructure noise component minus the discontinuous component that has not  yet been impounded into the observed prices: ", "<s4>S", "<s12>i \u2206", "<s16>n", "<s4> \u2212 Z", "<s12>i \u2206", "<s16>n", " = ", "", "<s12>p ", "X ", "", "<s12>k =1 ", "<s4>w", "<s12>k,i \u2206", "<s16>n", "<s4>u", "<s12>k,i \u2206", "<s16>n", " + ", "", "<s12>p ", "X ", "", "<s12>k =1 ", "<s4>w", "<s12>k,i \u2206", "<s16>n ", "<s4>\u0000  Y", "<s12>d  k,i \u2206", "<s16>n", "<s4>\u2212 X", "<s12>d  k,i \u2206", "<s16>n ", "\u0001  .  (7) ", "This sharp theoretical decomposition is unobservable to the econometrician in empirical data. ", "", "7 ", "<p>in which the returns are reported in percentages and the jump returns are underlined. The  timings of these jumps shows that stock prices asynchronously incorporate news. Stock A\u2019s  price (\ufb01rst column) takes 2 minutes longer than the ETF\u2019s (last column) to complete its  jump, Stock B\u2019s jump (second column) is delayed by one minute, stock C does not jump at  all (third column).  These delays cause the implied (ine\ufb03cient) returns of the synthetic ABC portfolio to  deviate from the (e\ufb03cient) returns of the ABC ETF. The sum of the \ufb01rst three columns  of the matrix below, which calculates the return spread  \u03b4", "<s8>r  i \u2206", "<s14>n", ", represents the returns of the  synthetic ABC portfolio, calculated as the equally weighted, linear combination of the log  returns of stocks A, B, and C (the \ufb01rst three columns in equation (8)). The fourth column  on the left side of the equal sign is the log return of the ABC ETF (the last column in (8)).  Their di\ufb00erence, on the right-hand side of equation (9), is the return spread (6), in each of  the \ufb01ve periods. ", "<p>\u03b4", "<s8>r  i \u2206", "<s14>n", "= ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8f0 ", "", "<s8>1", "<p>/", "<s8>3", "<p>. ( \u2212 0 . 018 + 0 . 015  \u2212 0 . 120) ", "<s8>1", "<p>/", "<s8>3", "<p>. ( \u2212 0 . 031  \u2212 0 . 067  \u2212 0 . 104) ", "<s8>1", "<p>/", "<s8>3", "<p>. ( \u2212 0 . 057  \u2212 0 . 029 + 0 . 088) ", "<s8>1", "<p>/", "<s8>3", "<p>. ( 0 . 629 + 1 . 201 + 0 . 017) ", "<s8>1", "<p>/", "<s8>3", ". ( 0 . 651 + 0 . 062 + 0 . 074) ", "<p>|  {z  } ", "<s8>ABC portfolio  returns ", "", ".  .  .  \u2212  \u2212  \u2212  \u2212  \u2212  .  .  . ", "( \u2212 0 . 039)  ( \u2212 0 . 071)  0 . 807  0 . 001  0 . 073 ", "<p>|  {z  } ", "<s8>ABC ETF  returns ", "", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fb ", "= ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8f0 ", "<p>.  .  .  \u2212 0 . 002  0 . 003  \u2212 0 . 807  0 . 614  0 . 189  .  .  .  | {z } ", "<s8>Return  spreads ", "", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fb ", ".  (9) ", "In the \ufb01rst two periods, the returns of the synthetic index portfolio are almost the same  as the returns to the ETF, producing only a small deviation on the right-hand side. Here,  only microstructure noise separates the two prices. In the third period, the ETF price jumps  by 0 . 807%, while the prices of the individual stocks do not move much, leading to a large  negative spread. In the fourth and \ufb01fth periods, the prices of the portfolio of individual  stocks catch up to the ETF jump, leading to large positive spreads.  This stylized example captures the central problem in the analysis of common jumps on  a \ufb01ne sampling grid. If news reached the entire market instantly, was interpreted homoge-  neously, and trading were continuous, jumps in a group of stocks should presumably occur  simultaneously with the ETF index jump and the spreads should be small and random. Slug-  gish price changes lead to asynchronous jumps, however, and the spread temporarily expands  and contracts again. ", "2.2.2  Decomposition of the spread ", "<p>To isolate the e\ufb00ect of asynchronous jumps on the spread (6), we separate the return of the  synthetic stock index portfolio, into discontinuous (jump) and continuous parts. The return  of this portfolio, \u2206", "<s8>n  i", "<p>S , is the weighted average of the observed returns from each individual  stock in the portfolio, P", "<s8>p  k =1", "<p>w", "<s8>k,i \u2206", "<s14>n", "<p>\u2206", "<s8>n  i", "<p>Y", "<s8>k", "<p>, in which \u2206", "<s8>n  i", "<p>Y", "<s8>k", "<p>, for  k  = 1 , ..., p , is the \u2206", "<s8>n  i", "<p>-th observed  return of the  k th stock.  Jump tests, such as the one developed by Lee and Mykland (2008), help us \ufb02ag large  observed stock returns as jumps. Based on this, we categorize observed stock returns \u2206", "<s8>n  i", "<p>Y", "<s8>k ", "into two distinct categories: ", "<p>\u2206", "<s8>n  i", "<p>Y", "<s8>k", "<p>= \u2206", "<s8>n  i", "<p>J", "<s8>k", "<p>+ \u2206", "<s8>n  i", "<p>C", "<s8>k", ".  (10) ", "8 ", "<p>This stock return is composed of a jump return, de\ufb01ned as \u2206", "<s8>n  i", "<p>J", "<s8>k", "<p>:= \u2206", "<s8>n  i", "<p>Y", "<s8>k", "<p>\u00b7  I (Jump", "<s8>i \u2206", "<s14>n", "<p>),  or a continuous return \u2206", "<s8>n  i", "<p>C", "<s8>k", "<p>:= \u2206", "<s8>n  i", "<p>Y", "<s8>k", "<p>\u00b7  I (No Jump", "<s8>i \u2206", "<s14>n", "<p>). The indicator function  I ( \u00b7 ) \ufb02ags  whether the jump test \ufb02ags a jump. These return types are mutually exclusive, meaning a  stock return at any given time interval \u2206", "<s8>n  i", "can be classi\ufb01ed as either but not both.  After this decomposition, the return spread (6) equals a linear combination of the weighted  stock jump returns, the weighted continuous stock returns, and the ETF returns: ", "<p>\u03b4", "<s8>r  i \u2206", "<s14>n ", "", "<s8>(6) ", "<p>:= \u2206", "<s8>n  i", "<p>S  \u2212 \u2206", "<s8>n  i", "<p>Z ", "<s8>(10) ", "= ", "", "<s8>p ", "X ", "", "<s8>k =1 ", "<p>w", "<s8>k,i \u2206", "<s14>n", "<p>\u2206", "<s8>n  i", "<p>J", "<s8>k ", "<p>|  {z  } ", "<s8>Weighted  jump  stock returns ", "", "+ ", "", "<s8>p ", "X ", "", "<s8>k =1 ", "<p>w", "<s8>k,i \u2206", "<s14>n", "<p>\u2206", "<s8>n  i", "<p>C", "<s8>k ", "<p>|  {z  } ", "<s8>Weighted  continuous  stock returns ", "", "<p>\u2212  \u2206", "<s8>n  i", "<p>Z  |{z} ", "<s8>ETF returns ", "", "<p>|  {z  } ", "<s8>Target ", "", ".  (11) ", "We want to optimally change the time labels of the jump returns of individual stocks (the  \ufb01rst term) to o\ufb00set the ETF jump (included in the second term). The \u201ctarget\u201d consists  of the ETF return (with a sign \ufb02ip) and the continuous stock returns (maintaining their  relationship). Recall, if both the stocks and the ETF impound news at the same time, the  spread in returns should be small, containing only microstructure noise. ", "2.2.3  Construction of the jump-event matrix ", "To help us synchronize jumps within an event window, we create a jump-event matrix \u0393.  This matrix is an easier-to-handle representation of the decomposition outlined in (11) and  has the following structure: ", "<p>\u0393 = ( \u03b3", "<s8>il", "<p>) :=  h  w", "<s8>i \u2206", "<s14>n", "<p>\u2206", "<s8>n  i", "<p>J  |  {z  } ", "<s8>Weighted  jump  stock returns ", "", "<p>, T", "<s8>i \u2206", "<s14>n ", "<p>|{z} ", "<s8>Target ", "", "i ", "", "<s8>i \u2208W", "<s14>n", ",  (12) ", "<p>The matrix \u0393 consists of elements  \u03b3", "<s8>il", "<p>, with  i  = 1 , ..., h  and  l  = 1 , ..., q , where  h  is the number  of time periods in the event window around the ETF jump, and  q \u2212 1, is the number of jumps  in individual stocks within the time interval, not the number of stocks. Some stocks may  jump more than once or not at all. The event window,  W", "<s8>n", "<p> := [ I", "<s8>1", "<p>\u2206", "<s8>n", "<p>, I", "<s8>2", "<p>\u2206", "<s8>n", "<p>], covers a range of  h  :=  I", "<s8>2", "<p>\u2206", "<s8>n", "<p>\u2212 I", "<s8>1", "<p>\u2206", "<s8>n", "<p>+1 time periods. For the empirical application in Section 3, we use an event  window from \ufb01ve minutes before to \ufb01ve minutes after the ETF jump,  I", "<s8>1", "<p>\u2206", "<s8>n", "<p> = ( i", "<s8>\u2217", "<p>\u2212 5)\u2206", "<s8>n", "<p> and  I", "<s8>2", "<p>\u2206", "<s8>n", "<p> = ( i", "<s8>\u2217", "<p>+ 5)\u2206", "<s8>n", ".  The matrix\u2019s \ufb01rst  q \u2212 1 columns consist of vectors of weighted stock jump returns sampled  within this event window. In practice, we \ufb01rst collect the  p  jump vectors of individual stocks  within a window of observations: ", "<p>[\u2206", "<s8>n  i", "<p>J", "<s8>k", "<p>]", "<s8>i \u2208W", "<s14>n", ",  with  k  = 1 , ..., p, ", "<p>in which \u2206", "<s8>n  i", "<p>J", "<s8>k", "<p>is the vector of jump returns for stock  k , with  k  = 1 , ..., p . These vectors are  then reorganized in the matrix. If a stock jumps multiple times, as does stock A, separate  jumps appear in di\ufb00erent columns. Each jump vector contains one and only one non-zero  element. We exclude the jump vectors for which the stock does not jump, as in the case of  stock C. The matrix\u2019s  q th column is the target vector,  T", "<s8>i \u2206", "<s14>n", "<p> := ( P", "<s8>p  k =1", "<p>w", "<s8>k,i \u2206", "<s14>n", "<p>\u2206", "<s8>n  i", "<p>C", "<s8>k", "<p>)  \u2212 \u2206", "<s8>n  i", "<p>Z ,  which is the di\ufb00erence between the continuous returns of the synthetic stock index portfolio,  P", "<s8>p  k =1", "<p>w", "<s8>k,i \u2206", "<s14>n", "<p>\u2206", "<s8>n  i", "<p>C", "<s8>k", "<p>, and the ETF returns \u2206", "<s8>n  i", "Z . ", "9 ", "The row-sums of this matrix show its practical value. Within \u0393, we rearrange the stock  jumps, but not the elements of the target column. Each row-sum, a linear combinations  of stock jumps, the stock\u2019s continuous returns and the ETF returns, can easily re\ufb02ect the  spreads for stock jumps with di\ufb00erent time labels (11): ", "<p>\u0393", "<s8>+", ":= ", "", "<s8>q ", "X ", "", "<s8>m =1 ", "<p>( \u03b3", "<s8>im", "<p>) = [ \u03b4", "<s8>r  i \u2206", "<s14>n", "<p>]", "<s8>i \u2208W", "<s14>n", ".  (13) ", "In our ABC example, the jump-event matrix (12) is: ", "\u0393 = ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8f0 ", "0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 210  0 . 000  0 . 400 ", "<p>0 . 000  0 . 217  0 . 000  |  {z  } ", "<s8>Weighted  jump  stock returns ", "", "<p>\u2212 0 . 002  0 . 003  \u2212 0 . 807  0 . 004  \u2212 0 . 028  | {z } ", "<s8>Target ", "", "\uf8f9 ", "<p>\uf8fa  \uf8fa  \uf8fb ,  with row-sums \u0393", "<s8>+", " = ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8f0 ", "\u2212 0 . 002  0 . 003  \u2212 0 . 807  0 . 614  0 . 189 ", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fb . ", "The \ufb01rst three columns of the jump-event matrix correspond to the three individual stock  jumps across an event window from two minutes before to two minutes after the ETF jump.  Note that the number of columns in the \ufb01rst block corresponds to the number of identi\ufb01ed  jumps in individual stocks, not the number of individual stocks.  The \ufb01rst two columns  contain the gradual jumps of Stock A and the third column contains the delayed jump of  stock B. The stock jump sizes are generally weighted according to their shares of the index,  but this example uses an equally weighted index for simplicity. The fourth column in the  jump-event matrix is a target vector that contains the di\ufb00erence between the continuous  returns of the stocks and the ETF returns. The return spread is the sum of the row-sums of  the weighted jump stock returns and the target column,  i.e.  the row-sums of the jump-event  matrix (13). As before (in 2.2.1), there is a negative and a positive spike in the return spread  in a small window around the ETF jump in period 3, because stocks A and B do not jump  until periods 4 and 5. ", "", "<h5>2.3  Rearranging the elements within the jump-event matrix ", "", "<p>After decomposing the stock returns into jump and non-jump returns, we can rearrange the  stock jumps in the jump-event matrix to o\ufb00set the target column. The rearrangement is a  combinatorial optimization problem. We seek to rearrange the stock jumps in the jump-event  matrix (each individual column in the \ufb01rst block of columns in the jump-event matrix) to  o\ufb00set the elements in the target vector (the last column), which minimizes the variability of  return spreads (the row-sums).  A rearrangement of a speci\ufb01c column in the  h  \u00d7  q  jump-event matrix is determined by  a permutation  \u03c0", "<s8>l", "<p> of its  h  elements, with  l  = 1 , ..., q . This permutation  \u03c0", "<s8>l", " is represented  compactly as a vector mapping the original order into a new order: ", "<p>\u03c0", "<s8>l", "<p> :=  \u0012  1  2  ...  h  \u03c0", "<s8>l", "<p>(1)  \u03c0", "<s8>l", "<p>(2)  ...  \u03c0", "<s8>l", "( h ) ", "\u0013  .  (14) ", "<p>Each column in the jump-event matrix has a permutation. The collection of these permuta-  tions for all  q  columns is denoted by  \u03c0  := ( \u03c0", "<s8>1", "<p>, ..., \u03c0", "<s8>q", "). ", "10 ", "A rearrangement of the jump-event matrix, as de\ufb01ned in (12), is a new matrix, denoted  with a  \u03c0  in its superscript: ", "<p>\u0393 :=  h  w", "<s8>i \u2206", "<s14>n", "<p>\u2206", "<s8>n  i", "<p>J  |  {z  } ", "<s8>Weighted  jump  stock returns ", "", "<p>, T", "<s8>i \u2206", "<s14>n ", "<p>|{z} ", "<s8>Target ", "", "i ", "", "<s8>i \u2208W", "<s14>n ", "", "<s8>Rearrangement ", "<p>\u2212  \u2212  \u2212  \u2212  \u2212  \u2212  \u2212  \u2212  \u2192 \u0393", "<s8>\u03c0", "<p>:=  h  w", "<s8>i \u2206", "<s14>n", "<p>\u2206", "<s8>n  i", "<p>J", "<s8>\u03c0 ", "<p>|  {z  } ", "<s8>Rearranged  weighted  jump  stock returns ", "", "<p>, T", "<s8>i \u2206", "<s14>n ", "<p>|{z} ", "<s8>Target ", "", "i ", "", "<s8>i \u2208W", "<s14>n", ".  (15) ", "<p>In this new matrix, the elements  \u03b3", "<s8>\u03c0  il", "<p>correspond to the new con\ufb01guration of the matrix. The  vector  w", "<s8>i \u2206", "<s14>n", "<p>\u2206", "<s8>n  i", "<p>J", "<s8>\u03c0", "<p> := ( w", "<s8>1 ,i \u2206", "<s14>n", "<p>\u2206", "<s8>n  i", "<p>J", "<s8>\u03c0  1", "<p>, ..., w", "<s8>q \u2212 1 ,i \u2206", "<s14>n", "<p>\u2206", "<s8>n  i", "<p>J", "<s8>\u03c0  q \u2212 1", "<p>) consists of the  rearranged  weighted  stock jump returns.  By changing the order of elements within the jump return vectors,  this new version of the matrix re\ufb02ects a di\ufb00erent arrangement of stock jumps. The target  column, however, remains unchanged: we do not swap any elements in the  q th column in the  jump-event matrix, and it does not carry a  \u03c0  in its superscript.  The row-sums of the rearranged jump-event matrix \u0393", "<s8>\u03c0", "are the new return spreads: ", "<p>\u0393", "<s8>\u03c0, +", ":= ", "", "<s8>q ", "X ", "", "<s8>m =1 ", "<p>( \u03b3", "<s8>\u03c0  im", ") .  (16) ", "<p>These row-sums are in\ufb02uenced by the speci\ufb01c arrangement (and thus timing) of the stock  jumps. This makes them particularly valuable for examining various scenarios and under-  standing the impact of di\ufb00erent timings.  Returning to the ABC example: let\u2019s consider a speci\ufb01c permutation  \u03c0", "<s8>1", " (see (14)), which  swaps the 3rd and the 4th observations in the \ufb01rst column in the jump-event matrix: ", "<p>\u03c0", "<s8>1", " =  \u0012  1  2  3  4  5  1  2  4  3  5 ", "\u0013  . ", "This swap rearranges the jump-event matrix, switching the 3rd and 4th rows of the \ufb01rst  column, shifting a weighted stock jump of stock A one period back in time (and a zero  forward in time): ", "<p>\u0393", "<s8>\u03c0", "= ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8f0 ", "0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 210  0 . 000  0 . 000  0 . 000  0 . 000  0 . 400 ", "<p>0 . 000  0 . 217  0 . 000  |  {z  } ", "<s8>Rearranged  weighted  jump  stock returns ", "", "<p>\u2212 0 . 002  0 . 003  \u2212 0 . 807  0 . 004  \u2212 0 . 028  | {z } ", "<s8>Target ", "", "\uf8f9 ", "<p>\uf8fa  \uf8fa  \uf8fb ,  with row-sums \u0393", "<s8>\u03c0, +", " = ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8f0 ", "\u2212 0 . 002  0 . 003  \u2212 0 . 597  0 . 404  0 . 189 ", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fb , ", "After this rearrangement, the third and fourth row-sum of the jump-event matrix also change,  and the variability in the row-sums is slightly reduced, because the ETF jump also occurs in  the third observation. ", "", "<h5>2.4  The best rearrangement of the jump-event matrix ", "", "<p>Under the assumption that the latent prices of the price series of the stocks and the ETF  move in lockstep, the best jump rearrangement minimizes the variability of the return spreads,  which measures jump misalignment. This reduction in spread variability is known as \u201c\ufb02at-  tening\u201d. Formally, we aim to minimize the range of these return spreads, i.e., the row-sums  \u0393", "<s8>\u03c0, +", ": ", "<p>min ", "<s8>\u03c0", "<p>R  \u0000  \u0393", "<s8>\u03c0, +", "\u0001  .  (17) ", "11 ", "<p>The range  R ( \u00b7 ) is the di\ufb00erence between the highest and lowest row-sums in our rearranged  data:  R  \u0000  \u0393", "<s8>\u03c0, +", "<p>\u0001  = \u0393", "<s8>\u03c0, +  ( h )", "<p>\u2212 \u0393", "<s8>\u03c0, +  (1) ", "", "in which the subscript ( i ) in parentheses indicates the  i th order statistic of the sample of  row-sums. By minimizing  R , the optimization problem \ufb01nds the best alignment of individual  stock jumps with the ETF jump. By doing so, the return spreads will be nearly the same  (ideally zero) across all rows, re\ufb02ecting a coordinated market reaction.  The combinatorial optimization problem (17) is rooted in the pioneering work of Puccetti  and R\u00a8  uschendorf (2012) and Embrechts et al. (2013) on rearrangements and the Rearrange-  ment Algorithm; looping over each column in a matrix to order it oppositely to the sum of  the other columns (see Appendix B for a run-through). This algorithm is best known as an  actuarial tool to bound portfolio risk, but also has applications in other disciplines, such as  such as option pricing ( e.g. , Bondarenko and Bernard, 2023) and operations research ( e.g. ,  Boudt et al., 2018).  Their rearrangement algorithm, however, does not constrain the rearrangements. For  example, it can move jumps either forward or backward in time. We introduce the \u201cRe-  arrangement Mixed-Integer Linear Program\u201d to constrain the procedure from economically  implausible rearrangements. ", "2.4.1  The idea behind the RMILP ", "<p>In the domain of operations research, one often encounters the challenge of optimizing an  objective function within a set of constraints: \u201cFind a vector  x  that minimizes  c", "<s8>\u22a4", "x , with  c  a given vector, subject to some constraints on  x .\u201d The Rearrangement Mixed-Integer Linear  Program (RMILP) we introduce here adheres to this principle: it chooses arguments which  minimize an objective function, subject to linear constraints, and it allows for penalties. ", "Permutations as permutation matrices ", "<p>To rearrange (i.e., permute) the  h  observations in a single column in the jump-event matrix,  we use the column representation of a permutation matrix. Given that the jump-event matrix  has 4 columns, our solution will involve 4 permutation matrices, one for each column.  The  h \u00d7 h  permutation matrix, denoted as  P", "<s8>\u03c0", "<s14>l", "<p>, reorders the columns of the identity matrix  I", "<s8>h", "<p> to represent a permutation  \u03c0", "<s8>l", ", as we de\ufb01ned earlier in (14): ", "<p>P", "<s8>\u03c0", "<s14>l", "<p> = ( p", "<s8>ii", "<s14>\u2032", ") = ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8f0 ", "<p>e", "<s8>\u03c0", "<s14>l", "<s8>(1) ", "<p>e", "<s8>\u03c0", "<s14>l", "<s8>(2) ", "<p>.  .  .  e", "<s8>\u03c0", "<s14>l", "<s8>( h ) ", "", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fb .  (18) ", "<p>For each  i , the element  p", "<s8>ii", "<s14>\u2032", "<p> is 1 if  i", "<s8>\u2032", "<p>=  \u03c0", "<s8>l", "<p>( i ), and 0 otherwise. This means that the entries of  the  i th row are all zero except for a 1 that appears in column  \u03c0", "<s8>l", "<p>( i ). We can think of these  rows as basis vectors, where  e", "<s8>i", "<s14>\u2032", "<p> is a row-vector of length  h  with a 1 on position  i", "<s8>\u2032", "and a 0 on  every other position. Note that the arguments in the subscripts of the basis vectors match  the permutation order in (14).  This representation is crucial for the RMILP because a permutation matrix (18) can track  how far each element shifted by tracking the deviations from the diagonal. Such tracking  is essential for imposing penalties for movement. For example, we can impose a maximum ", "12 ", "<p>distance from the diagonal to not let the jumps stray too far in the event window (see Section  2.4.3 for further elaboration).  The permutation discussed in the example of Section 2.3,  \u03c0", "<s8>1", " switches the 3rd and 4th  rows of the 1st column in a jump-event matrix, and corresponds to the following 5  \u00d7  5 (there  are 5 rows in the jump-event matrix) permutation matrix: ", "<p>P", "<s8>\u03c0", "<s14>1", " = ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8f0 ", "<p>e", "<s8>\u03c0", "<s14>1", "<s8>(1) ", "<p>e", "<s8>\u03c0", "<s14>1", "<s8>(2) ", "<p>e", "<s8>\u03c0", "<s14>1", "<s8>(3) ", "<p>e", "<s8>\u03c0", "<s14>1", "<s8>(4) ", "<p>e", "<s8>\u03c0", "<s14>1", "<s8>(5) ", "", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fb = ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8f0 ", "<p>e", "<s8>1 ", "<p>e", "<s8>2 ", "<p>e", "<s8>4 ", "<p>e", "<s8>3 ", "<p>e", "<s8>5 ", "", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fb = ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8f0 ", "1  0  0  0  0  0  1  0  0  0  0  0  0  1  0  0  0  1  0  0  0  0  0  0  1 ", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fb , ", "<p>where column  i", "<s8>\u2032", "<p>of the  I", "<s8>5", "<p> identity matrix now appears as the column  \u03c0 ( i", "<s8>\u2032", "<p>) of  P", "<s8>\u03c0", "<s14>1", "<p>. The changes  occur in the vertical,  i , dimension: upward moves in the permutation matrix are backward  moves in time, while downward moves in the permutation matrix are forward moves in time.  The fourth element, which is on position (4 ,  4) in  I", "<s8>5", "<p>, shifts one spot backward in time by  shifting one step upward in the permutation matrix. The third element, which is on position  (3 ,  3) in  I", "<s8>5", "<p>, shifts one step forward in time by shifting one step downward in the permutation  matrix. In other words,  P", "<s8>pi", "<s14>1", " switches the period 3 return with the period 4 return.  There is a distinct permutation matrix for each of the  q  columns in the jump-event matrix,  i.e., for each stock jump and the target. These matrices are then concatenated to form the  co-permutation matrix \u03a0 of dimension  h  \u00d7  ( hq ): ", "<p>\u03a0 = ( p", "<s8>lii", "<s14>\u2032", "<p>) =  \u0002  P", "<s8>\u03c0", "<s14>1", "<p>, P", "<s8>\u03c0", "<s14>2", "<p>, ..., P", "<s8>\u03c0", "<s14>q ", "\u0003  ,  (19) ", "<p>with  l  = 1 , ..., q ,  i, i", "<s8>\u2032", "<p>= 1 , ..., h  and  P", "<s8>\u03c0", "<s14>1", "<p> short notation for the  h  \u00d7  h  permutation matrix for  the \ufb01rst column in the jump-event matrix. Similarly,  P", "<s8>\u03c0", "<s14>1", "<p>, P", "<s8>\u03c0", "<s14>1", "<p>, ..., P", "<s8>\u03c0", "<s14>q", " are the permutation  matrices for the 2nd, 3rd, ..., and  q th columns, respectively. ", "Extracting the row-sums with permutation matrices ", "To produce the return spreads, we start by transforming the jump-event matrix into a sin-  gle long column vector and then premultipy the (vectorized) jump-event matrix by the co-  permutation matrix: ", "<p>\u0393", "<s8>\u03c0, +", "= \u03a0  \u00d7  vec(\u0393) ,  (20) ", "or, equivalently: ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8f0 ", "<p>J", "<s8>\u03c0, +  n, 1 ", "<p>J", "<s8>\u03c0, +  n, 2 ", "<p>J", "<s8>\u03c0, +  n, 3 ", "<p>.  .  .  J", "<s8>\u03c0, +  n,h ", "", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fb  = ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8f0 ", "<p>p", "<s8>111 ", "<p>p", "<s8>112 ", "<p>. . .  p", "<s8>11 h ", "<p>p", "<s8>211 ", "<p>p", "<s8>212 ", "<p>. . .  p", "<s8>21 h ", "<p>. . .  p", "<s8>q 11 ", "<p>p", "<s8>q 12 ", "<p>. . .  p", "<s8>q 1 h ", "<p>p", "<s8>121 ", "<p>p", "<s8>122 ", "<p>. . .  p", "<s8>12 h ", "<p>p", "<s8>221 ", "<p>p", "<s8>222 ", "<p>. . .  p", "<s8>22 h ", "<p>. . .  p", "<s8>q 21 ", "<p>p", "<s8>q 22 ", "<p>. . .  p", "<s8>q 2 h ", "<p>.  .  .  ...  .  .  .  .  .  .  ...  .  .  .  .  .  .  ...  .  .  .  p", "<s8>1 h 1 ", "<p>p", "<s8>1 h 2 ", "<p>. . .  p", "<s8>1 hh ", "<p>p", "<s8>2 h 1 ", "<p>p", "<s8>2 h 2 ", "<p>. . .  p", "<s8>2 hh ", "<p>. . .  p", "<s8>qh 1 ", "<p>p", "<s8>qh 2 ", "<p>. . .  p", "<s8>qhh ", "", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fb \u00d7 ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8ef  \uf8f0 ", "<p>\u03b3", "<s8>11 ", "<p>\u03b3", "<s8>21 ", "<p>.  .  .  \u03b3", "<s8>h 1 ", "", "<p>.  .  .  \u03b3", "<s8>hq ", "", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fa  \uf8fb ", ", ", "<p>in which vec(\u0393), the vectorized version of the observed jump-event matrix \u0393 = ( \u03b3", "<s8>il", "), with  i  = 1 , ..., h  and  l  = 1 , ..., q , is a stacked column vector of dimension  hq \u00d7 1. The co-permutation  matrix \u03a0 rearranges this vector. The result of the matrix product in (20) is a column vector  with  h  entries (the left side of the equal sign). Each entry is a row-sum from the rearranged  jump-event matrix. ", "13 ", "Flattening the row-sums by choosing the best permutation matrices ", "<p>Recall that linear programs are problems that can be expressed in canonical form as: \u201cFind  a vector  x  that minimizes  c", "<s8>\u22a4", "<p>x , with  c  a given vector, subject to some constraints on  x .\u201d Be-  cause we cannot directly express the objective function,  R , as a function of the permutation  matrices in \u03a0, the RMILP steps slightly outside the bounds of conventional linear program-  ming to get the appropriate form indirectly.", "<s8>5", "The RMILP aims to \ufb01nd the co-permutation  matrix \u03a0, along with two auxiliary boundary values,  L  (lower) and  U  (upper), to minimize  the interval  U  \u2212 L :  Find \u03a0 , L, U  that minimizes  U  \u2212 L, ", "<p>subject to  L  \u2264 J", "<s8>\u03c0, +  n,i", "\u2264 U,  for  i  = 1 , ..., h,  (21) ", "<p>in which \u03a0 is the co-permutation matrix, which de\ufb01nes the rearranged jump-event matrix,  and  L  and  U  de\ufb01ne lower and upper bounds of an unknown interval.  This objective function alone does not directly minimize the range of the row-sums. We  link  L  and  U  with \u03a0 by constraining the decision variables with inequality constraints:  L  and  U  mark the bounds within which all row-sums  J", "<s8>\u03c0, +  n,i ", "<p>fall. Seemingly trivial, this constraint  indirectly sets the smallest possible (the minimum) and largest possible (maximum) row-  sum.", "<s8>6", "<p>By minimizing  U  \u2212 L , subject to the inequality constraint, the RMILP squeezes these  boundaries together as closely as possible. In doing so, the RMILP ensures that the optimal  solutions for  L  and  U  (denoted  L", "<s8>\u2217", "<p>and  U", "<s8>\u2217", ") equal the smallest and largest row-sums: ", "<p>L", "<s8>\u2217", "<p>=  J", "<s8>\u03c0, +  n, (1)", "<p>and  U", "<s8> \u2217", "<p>=  J", "<s8>\u03c0, +  n, ( h )", ",  (22) ", "<p>A simple proof by contradiction su\ufb03ces to con\ufb01rm this statement: if  L", "<s8>\u2217", "<p>and  U", "<s8>\u2217", "were not  equal to the smallest and largest row-sums, one could still further minimize  U  \u2212 L .  The program in (21) chooses candidates for three decision variables \u2013 \u03a0,  L , and  U \u2013 to  minimize the range of the row-sums. The optimization problem thus becomes a \u201cmixed-  integer\u201d linear program, with \u03a0 composed of binary elements (0 ,  1) and continuous values  for  L  and  U . ", "2.4.2  Other necessary constraints for the RMILP ", "In the RMILP, we constrain the choices of the co-permutation matrix (19) using two addi-  tional types of constraints: the permutation constraint and a target constraint. The permuta-  tion constraint requires that each permutation matrix is composed entirely of zeros and ones,  and that each row and column in the permutation matrix sums to one. An identity matrix  satis\ufb01es this constraint, for example, as does an identity matrix with its rows rearranged in  any order. The target constraint prohibits changes in the order of the elements in the target  column and must be explictly encoded into the program. The combination of these minimal  conditions produces meaningful rearrangements that e\ufb00ectively minimize the range. ", "", "<s12>5", "<s4>While the matrix product (20) can easily extract each individual row-sum, i.e.,  J", "<s12>\u03c0, +  n, 1", "<s4>, J", "<s12>\u03c0, +  n, 2", "<s4>, ..., J", "<s12>\u03c0, +  n,h", "<s4>(with-  out brackets in the indices), there is no possible choice of the co-permutation matrix \u03a0 which produces the  maximum or minimum of the row-sums speci\ufb01ed in our objective function, i.e.,  J", "<s12>\u03c0, +  n, (1)", "<s4>and  J", "<s12>\u03c0, +  n, ( h )", "(with brack-  ets) through the matrix product. ", "", "<s12>6", "<s4>The row-sums  J", "<s12>\u03c0, +  n,i ", "in the middle of the constraint result from the matrix product in (20) for a given  arrangement of jumps. The left inequality in the constraint of (21) de\ufb01nes a lower boundary in a set of  row-sums (by de\ufb01nition each individual row-sum should greater than or equal to the minimum) and the right  inequality de\ufb01nes upper boundary in a set of row-sums (by de\ufb01nition each individual row-sum should be less  than or equal to the maximum). The outer boundaries, the lower boundary should be less than or equal to  the upper boundary, ensures that the minimum is always smaller than the maximum, as by de\ufb01nition. ", "", "14 ", "The permutation constraints ", "To de\ufb01ne a proper co-permutation matrix (19), we set up equality constraints in the linear  program: ", "subject to ", "", "<s8>q ", "X ", "", "<s8>l =1 ", "<s8>h ", "X ", "", "<s8>i =1 ", "<s8>h ", "X ", "", "<s8>i", "<s14>\u2032", "<s8>=1 ", "<p>p", "<s8>lii", "<s14>\u2032", " =  hq,  (23) ", "", "<s8>h ", "X ", "", "<s8>i", "<s14>\u2032", "<s8>=1 ", "<p>p", "<s8>lii", "<s14>\u2032", " = 1 ,  for  i  = 1 , ..., h  and  l  = 1 , ..., q,  (24) ", "", "<s8>h ", "X ", "", "<s8>i =1 ", "<p>p", "<s8>lii", "<s14>\u2032", "<p> = 1 ,  for  l  = 1 , ..., q  and  i", "<s8>\u2032", "= 1 , ..., h.  (25) ", "Constraint (23) requires that each permutation matrix (18) contains  h  ones, corresponding to  selecting all (exactly  h ) elements in each column in the jump-event matrix. Thus, the total  sum across all  q  permutation matrices in the co-permutation matrix equals  hq . Constraint  (24) imposes that the rows of each permutation matrix to sum to one. Without this, we  could end up selecting multiple or no elements in certain positions of the rearranged matrix.  Constraint (25) applies to the columns of the permutation matrix. It guarantees that no  number is repeated within any column in the rearranged matrix. ", "The target ", "<p>We also impose an equality constraint on the permutation matrix of the last column in the  jump-event matrix  P", "<s8>\u03c0", "<s14>q", " that ensures that the RMILP does not rearrange the elements in the  target column: ", "<p>subject to (diag( P", "<s8>\u03c0", "<s14>q", "<p>))", "<s8>i", " = 1 ,  for  i  = 1 , ..., h,  (26) ", "<p>In other words, the permutation matrix (18) associated with the  q th column in the jump-  event matrix  P", "<s8>\u03c0", "<s14>q", " must be an identify matrix. ", "2.4.3  Adapting the RMILP with additional constraints ", "<p>Linear programming allows us to prevent economically implausible rearrangements.  For  example, we can penalize large moves or moves in a particular direction with the aid of a  distance matrix. This matrix,  D", "<s8>n", "<p>, tracks how far each rearrangement in any permutation  matrix  P", "<s8>\u03c0", "<s14>l", "<p> (18) deviates from its original order (an identity matrix).  D", "<s8>n", ", an  h  \u00d7  h  matrix, is  structured as: ", "<p>D", "<s8>n", "<p> = ( d", "<s8>ii", "<s14>\u2032", ") ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8ef  \uf8f0 ", "0  1  \u00b7 \u00b7 \u00b7  h  \u2212 2  h  \u2212 1  1  0  \u00b7 \u00b7 \u00b7  h  \u2212 3  h  \u2212 2  .  .  .  .  .  .  ...  .  .  .  .  .  .  h  \u2212 2  h  \u2212 3  \u00b7 \u00b7 \u00b7  0  1  h  \u2212 1  h  \u2212 2  \u00b7 \u00b7 \u00b7  1  0 ", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fa  \uf8fb ,  (27) ", "with zeros on the diagonal and increasing values as we move away from the diagonal.  We only allow stock jumps to be moved backward in time because we assume that stock  prices are sluggish and lag the highly liquid and carefully watched ETF, they do not lead  it. We can restrict stock jumps to earlier times only, using the upper triangular portion of ", "15 ", "<p>D", "<s8>n", "<p> to monitor backward shifts in  P", "<s8>\u03c0", "<s14>l", "<p>. The upper triangular portion of the distance matrix  tracks the backward distance traveled of  all  elements in a column in the jump-event matrix,  because the permutation matrix (18) also tracks the rearrangements of the zeros. To only  track the move of a stock jump, we disable the irrelevant columns of the distance matrix: if  the price jumps in period  i  =  i", "<s8>\u2217", "<p>, we set the columns  i", "<s8>\u2032", "<p>\u0338 =  i", "<s8>\u2217", "<p>of  D", "<s8>n", " to zero.  The distance of the move for the  l th column in the jump-event matrix is equal to the  following matrix product of a vectorized permutation matrix and a vectorized distance matrix: ", "<p>d ( P", "<s8>\u03c0", "<s14>l", "<p>) = vecr ( P", "<s8>\u03c0", "<s14>l", "<p>)  \u00d7  vecr ( D", "<s8>n", "<p>)", "<s8>\u22a4", ",  for  l  = 1 , ..., q.  (28) ", "The vectorization, vecr( \u00b7 ) concatenates the rows of a matrix (unlike standard vectorization,  which stacks columns), producing a 1  \u00d7  hq  row-vector. We transpose the second term after  vectorization to get a  hq  \u00d7  1 column-vector. The matrix product gives us the total number  of relevant shifts.  We limit the length of jump moves in our rearrangements with an inequality constraint: ", "<p>subject to  d ( P", "<s8>\u03c0", "<s14>l", ")  \u2264 c,  for  l  = 1 , ..., q  \u2212 1 ,  (29) ", "<p>in which  c  \u2265 0 is the maximum permitted length of the backward move and  d ( P", "<s8>\u03c0", "<s14>l", ") is the total  distance traveled by a jump within the  l th column in the jump-event matrix. For example,  we could allow each jump to move backward in time a maximum of one or two minutes  and solve the RMILP for each of these possible jump-length constraints. The  q th column  is exempt from this constraint, as the target column remains \ufb01xed per constraint (26). In  practical applications, we could even tailor constraints for each stock based on its liquidity.  The trace plot in Figure 3 illustrates the minimized criterion function, i.e., the range of  the spreads or \ufb02atness, and the jump arrival times as a function of the permitted maximum  length of the move \u2013 a maximum of zero, one, two, three of four minutes \u2013 for each jump in  the stylistic jump-event matrix. We start from the observed prices: stock A jumps with a  delay and gradually in the 4th and 5th periods (Jumps 1 and 2) and stock B jumps with a  delay in the 4th period (Jump 3). The negative slope of the line in the top panel of Figure  3 shows that larger permitted backward shifts \ufb02attens the return spreads.  The bottom panel shows the rearranged arrival periods for the jumps as a function of  the permitted length of backward moves. With no backward moves, jumps 1 and 3 arrive in  period 4 and jump 3 arrives in period 5. If we permit one backward move for each jump, the  RMILP moves jumps 1 and 3 to period 3 while if we permit 2 backward moves, the RMILP  moves all jumps to period 3. The smallest range (0 . 048) occurs with two backward shifts,  aligning all the jumps in the third period in the bottom panel. Optimally rearranging the  jumps, produces the following transformation of the jump-event matrix: ", "\u0393 = ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8f0 ", "0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 210  0 . 000  0 . 400 ", "<p>0 . 000  0 . 217  0 . 000  |  {z  } ", "<s8>Weighted  jump  stock returns ", "", "<p>\u2212 0 . 002  0 . 003  \u2212 0 . 807  0 . 004  \u2212 0 . 028  | {z } ", "<s8>Target ", "", "\uf8f9 ", "<p>\uf8fa  \uf8fa  \uf8fb ", "<s8>The best ", "<p>\u2212  \u2212  \u2212  \u2212  \u2212  \u2212  \u2212  \u2212  \u2192 ", "<s8>rearrangement", "<p>\u0393", "<s8>\u03c0", " := ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8f0 ", "0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 210  0 . 217  0 . 400 ", "<p>0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  |  {z  } ", "<s8>Rearranged  weighted  jump  stock returns ", "", "<p>\u2212 0 . 002  0 . 003  \u2212 0 . 807  0 . 004  \u2212 0 . 028  | {z } ", "<s8>Target ", "", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fb . ", "Figure 4 shows the implied prices after this optimal arrangement of jump returns. The  observed (black) prices of stock A and stock B deviate from their e\ufb03cient (gray) values in  the \ufb01rst and second panels. (There are also small deviations in Stock C\u2019s observed prices ", "16 ", "Figure 3: Trace plot: Range of the spreads and jump arrival times as a function of the  permitted maximum length of the move ", "", "<s10>0  1  2  3  4 ", "<s10>0.0  0.2  0.4  0.6  0.8  1.0  1.2  1.4 ", "<s10>Permitted maximum length of the backward move ", "<s10>Range ", "<s10>0  1  2  3  4 ", "<s10>5  4  3  2  1 ", "<s10>Permitted maximum length of the backward move ", "<s10>Arrival time of the jump ", "", "<s15>Jump 1 ", "<s15>Jump 2 ", "<s15>Jump 3 ", "", "<s2>Note: This \ufb01gure plots the range of the return spreads (the row-sums of the jump-event matrix)  and the implied jump arrival times as a function of the length of permitted backward moves of  the jumps in each of the columns. The RMILP rearranges the gradual jump of Stock A (Jump  1 in the 4th period and Jump 2 in the 5th period) and the delayed jump of Stock B (Jump 3 in  the 4th period). We allow each jump to move backward in time a maximum of zero, one, two,  three, four minutes and solve the RMILP for each of these \ufb01ve possible constraints. ", "", "due to a (relatively smaller) contamination of the continuous component.) The fourth panel  shows that the delays cause the implied (ine\ufb03cient) price of the basket of stocks (the ABC  portfolio) to deviate from the e\ufb03cient ABC ETF price. The best rearrangement combines  two small jumps of stock A to period 3 and shifts the jumps of stock B one period backward  to period 3, aligning the jumps in time. The rearranged price paths (green) are now much  closer to the e\ufb03cient price paths (black) in the 1st, 2nd and 4th panel. ", "", "<h3>3  Empirics ", "", "We apply our methods to investigate the reactions of stock prices in event windows around  ETF jumps. We illustrate that synchronizing mistimed stock returns increases the Sharpe  ratio of a portfolio allocation strategy. ", "17 ", "Figure 4: The best rearrangement approximately recovers the e\ufb03cient stock jumps ", "", "<s9>0.014  0.018  0.022  0.026 ", "<s9>Stock A's log price ", "<s9>12:41  12:42  12:43  12:44  12:45  12:46  12:47  12:48  12:49 ", "<s9>Efficient  Observed  Rearranged ", "<s9>0.002  0.006  0.010  0.014 ", "<s9>Stock B's log price ", "<s9>12:40  12:41  12:42  12:43  12:44  12:45  12:46  12:47  12:48  12:49  12:50 ", "<s9>Efficient  Observed  Rearranged ", "<s9>\u22120.0060  \u22120.0045  \u22120.0030 ", "<s9>Stock C's log price ", "<s9>12:41  12:42  12:43  12:44  12:45  12:46  12:47  12:48  12:49 ", "<s9>Efficient  Observed ", "<s9>0.004  0.008  0.012 ", "<s9>Index log price ", "<s9>12:41  12:42  12:43  12:44  12:45  12:46  12:47  12:48  12:49 ", "<s9>ABC ETF  ABC synthetic portfolio  ABC synthetic portfolio rearranged ", "", "<s2>Note: This \ufb01gure shows the e\ufb03cient (gray), observed (black) and rearranged (green) log prices  of the assets. The top panel shows that Stock A jumps gradually and completes the jump 2  minutes after the ETF in bottom panel, while the second panel shows that stock B\u2019s jump is 1  minute late and stock C does not jump at all (third panel). The fourth panel shows that the  delays cause the implied (ine\ufb03cient) price of the basket of stocks (the ABC portfolio) to deviate  from the e\ufb03cient ABC ETF price. The best rearrangement approximately recovers the latent,  e\ufb03cient stock price. That is, by shifting the jumps of Stock A and Stock B to earlier periods  (top 2 panels), the LP minimizes the distance between the price of the ETF and the synthetic  portfolio (lowest panel). ", "", "18 ", "", "<h5>3.1  Data: The Dow and the DIA ETF ", "", "<p>The NYSE Trade and Quote (TAQ) database provides equity trade data with millisecond  precision timestamps. The basket instrument is the SPDR Dow Jones Industrial Average  ETF (DIA). We compare this ETF to the price of a synthetic index of Dow 30 stock prices,  as in Bollerslev et al. (2008).", "<s8>7 ", "", "The data span January 3, 2007 through April 2, 2020, which includes several exceptionally  turbulent episodes, such as the global housing and credit crisis, the European sovereign debt  crisis and the bail-out of Greece, the Russian, Greek, Turkish crisis and the 2020 stock market  crash.  We pre-\ufb01lter the prices as in Barndor\ufb00-Nielsen et al. (2009). We also remove banking holi-  days, half-trading days, any day where there is more than a two-hour gap between consecutive  trades and periods of malfunctioning such as the 2010 \ufb02ash crash.  There are many jumps in the data. We apply Boudt et al. (2011b)\u2019s modi\ufb01ed Lee and  Mykland (2008)\u2019s univariate jump test that accounts for intraday periodicity, on one-minute  returns (at  \u03b1  = 0 . 1%) to identify jumps. The univariate tests identify 1,710 ETF jumps  across 1,163 (jump) days. Some days include gradual or multiple ETF jumps.  We construct 1,529 [-5,+5]-minute jump-event matrices around ETF jumps, as in equation  (12). The event window spans from \ufb01ve minutes before the \ufb01rst ETF jump to \ufb01ve minutes  after the last jump in the case of multiple jumps. We contrain the RMILP in three ways.  1) We do not rearrange the jumps of stocks that already jump with the index, because we  assume those are e\ufb03cient. 2) No stock jumps may be moved earlier than the highly liquid  and carefully watched ETF. 3) No stock jumps may be moved if the ETF jumps within the  \ufb01rst 10 minutes or the last 10 minutes of the trading day. After imposing these \ufb01lters, there  remain 380 matrices candidate for rearrangement. The RMILP rearranges stock jumps in 180  cases (or 11.8% of all jump-event matrices). That is, there are many asynchronous jumps. ", "", "<h5>3.2  News and asynchronous jumps: An empirical illustration ", "", "<p>We investigate sluggish cojumps,  i.e.  jumps that occur later than the index jumps in the  DIA. Consider the following example: on September 18, 2007 the Federal Reserve announced  rate cuts, which the \ufb01nancial press characterized as a bold action.", "<s8>8 ", "", "Figure 5 shows the price paths of the DIA ETF and a synthetic Dow 30 index and the  spread between the returns of those two assets (6) on the day of the FOMC Statement \u2013  September 27, 2008. Lee and Mykland (2008)\u2019s jump test \ufb02ags a 0.938% ETF price jump at  2:16 pm, one minute after the release of the statement. We mark the ETF jump with a red  circle in the upper panel. As noted before, if news reached the entire market instantly, was  interpreted homogeneously, and trading were continuous, jumps in a group of stocks should  presumably occur simultaneously with the ETF index jump and spreads should be small and ", "", "<s12>7", "The constituency of the Dow 30 index is dynamic. The 43 unique tickers within our sample period are:  AA, AAPL, AIG, AXP, BA, BAC, C, CAT, CSCO, CVX, DD, DIS, DOW, DWDP, GE, GM, GS, HD, HON,  HPQ, IBM, INTC, JNJ, JPM, KFT, KO, MCD, MMM, MO, MRK, MSFT, NKE, PFE, PG, T, TRV, UNH,  UTX, V, VZ, WBA, WMT and XOM. ", "", "<s12>8", "For more information on this event, we refer to the o\ufb03cial Press release and the related FOMC Meeting  Statement. Comprehensive coverage and analysis of this decision were provided by major \ufb01nancial news  outlets: see e.g., The Short View: Fed decision \u2014 it\u2019s all about game theory, Overview: US equities and oil  surge after rate cuts, Cheering greets Fed announcement, Fed must weigh in\ufb02ation against recession, Bold  Fed goes for half-point cut, Bank acts boldly to avert recession risk, Fed cut: Pundits speak, Fed slashes  rates, and Feeling ecstatic? Mind the e-Ben-der ", "", "19 ", "random. The bottom panel shows that the ETF-synthetic index spread temporarily expands,  however, following the ETF jump, and then contracts again. That is, markets took time to  incorporate the Fed\u2019s news into the Dow 30 stock\u2019s prices. ", "Figure 5: When the FOMC statement is released on Sep. 18, 2007, the synthetic index\u2013ETF  spread expands and contracts again ", "", "<s1>1.000  1.010  1.020 ", "<s1>Time ", "<s1>log Price ", "", "<s11>Announcement ", "", "<s1>13:00  13:30  14:00  14:30  15:00  15:30 ", "<s1>ETF  SYN  Jump ", "<s1>\u22120.2  0.0  0.2 ", "<s1>Time ", "<s1>log Return spread (in %) ", "<s1>13:00  13:30  14:00  14:30  15:00  15:30 ", "", "<s2>Note: We plot the one-minute log prices of the DIA ETF (in gray) and a synthetically con-  structed Dow 30 index (in black), alongside the log return spreads, on the day of the FOMC  Statement of September 18, 2007. The statement gets issued at 2:15 pm and is marked in the  top plot by a dashed line. The subsequent ETF jump at 2:16 pm is marked with a red circle  and a red vertical tick on the time axis. ", "", "A jump-event matrix (12) characterizes the asset jumps across an event window from \ufb01ve  minutes before to \ufb01ve minutes after the index jump. On Sep. 18, 2007, for example, the  event window contains 50 stock jumps, including many gradual jumps, from 30 stocks, of  which 27 match,  i.e.  occur at the same time as, the ETF jump and 23 lag the ETF jump.  Figure 6 shows the range of the return spreads (left scale, gray) and the number of matched  stocks (right scale, black) as a function of the permitted length of the move in time for each  individual jump, as in equation (29). Permitting each jump to move one minute backward  minimizes the range (orange line); the range drops from 0.427% to 0.227%. Permitting a  maximum backward move of 4 periods or 4 minutes (green line) produces the same minimal  range for a larger number of matching stocks. This rearrangement matches 19 out of 23  scattered stock jumps with the ETF jump, approximately recovering the common jump in  the stocks. ", "20 ", "Figure 6: Range of the spreads and matching stocks as a function of the permitted maximum  length of the move ", "", "<s6>0  2  4  6  8  10 ", "<s6>0.25  0.35 ", "<s6>Permitted maximum length of the backward move ", "<s6>Range (in %) ", "<s6>27  31  35  39  43 ", "<s6>Matching stock jumps ", "", "<s2>Note: This \ufb01gure plots the range of the return spreads (left scale, gray) and the number of  matching stocks (right scale, black) as a function of the number of the permitted length of the  move during the Sep. 18, 2007 FOMC statement. The RMILP rearranges scattered jumps of  the Dow 30 stocks. We allow each jump to move at most 10 minutes backward in time and solve  the RMILP for each of these possible constraints. We mark the rearrangement with minimal  range with an orange line and the rearrangement with the maximum number of matching stock  jumps (for the same minimal range) with a green line. ", "", "Recovering the common jump is likely to improve estimates of the daily realized covariance  matrix. The realized covariance matrix is de\ufb01ned as (Barndor\ufb00-Nielsen and Shephard, 2004): ", "<p>C", "<s8>d", " = ", "", "<s8>\u230a T/ \u2206", "<s14>n", "<s8>\u230b ", "X ", "", "<s8>i =1 ", "<p>(\u2206", "<s8>n  i", "<p>Y  )(\u2206", "<s8>n  i", "<p>Y  )", "<s8>\u22a4 ", "(30) ", "<p>in which,  Y", "<s8>i \u2206", "<s14>n", "<p> = ( Y", "<s8>1 , \u2206", "<s14>n", "<p>, ..., Y", "<s8>p, \u2206", "<s14>n", "<p>)", "<s8>\u22a4", "<p>is the observed log price process (2) of the  p  stocks sampled  on a regular time grid  { i \u2206", "<s8>n", "<p> : 0  \u2264 i  \u2264\u230a T/ \u2206", "<s8>n", "<p>\u230b}  over one day  T  = 1, the  i th return of  Y", "<s8>i \u2206", "<s14>n", "<p> is  \u2206", "<s8>n  i", "<p>Y  =  Y", "<s8>i \u2206", "<s14>n", "<p>\u2212 Y", "<s8>( i \u2212 1)\u2206", "<s14>n", ". The standard realized covariance matrix (30) plugs in raw returns.  Other estimators, like the multivariate realized kernel in Barndor\ufb00-Nielsen et al. (2011) or  a Cholesky factorization in Boudt et al. (2017), protect against mild market microstructure  noise and the Epps (1979) e\ufb00ect, that is, the downward bias in covariance estimates due to  asynchronous trading. Using rearranged returns in (30) also protects against asynchronous  jumps and the underestimation of jump dependence.  Figure 7 shows a scatterplot of the estimated covariances of two stocks, HPQ and PFE,  versus the ETF and the 29 other Dow 30 stocks, when the covariances are constructed  with raw returns and with rearranged returns. The scattering of red dots away from (1,1)  illustrates that optimally changing the time labels of one of two observations (out of the  390 one-minute returns required to estimate the realized covariance) changes the estimated  covariance structure between the stocks and the ETF returns on the day of the FOMC  statement. For example, the fact that the statistics in the left panel generally lay above the  45-degree line shows that rearranging the jumps of HPQ, which jumps gradually, increases  its variance and most covariances with other stocks. The right panel shows that rearranging  the jumps of PFE, which jumps with an overreaction, reduces its own variance and all the  covariances with PFE returns. ", "21 ", "Figure 7: The realized covariance is di\ufb00erent in the rearranged returns on the day of the  FOMC statement ", "", "(a) Realized covariances of HPQ: Sep. 18, 2007 ", "", "<s13>0  1  2  3  4 ", "<s13>0  1  2  3  4 ", "<s13>Raw returns ", "<s13>Rearranged returns ", "<s13>Covariance of HPQ with ETF  Variance of HPQ  Covariances of HPQ with other stocks ", "", "(b) Realized covariances of PFE: Sep. 18, 2007 ", "", "<s13>0.0  0.5  1.0  1.5  2.0  2.5 ", "<s13>0.0  0.5  1.0  1.5  2.0  2.5  3.0 ", "<s13>Raw returns ", "<s13>Rearranged returns ", "<s13>Covariance of PFE with ETF  Variance of PFE  Covariances of PFE with other stocks ", "", "<s2>Note: This \ufb01gure shows two scatter plots consisting of the elements in the realized covariance  matrix for two stocks (HPQ and PFE), relative to DIA and the other Dow 30 stocks, on the  day of the FOMC statement. The x-axis shows the realized covariances with raw returns and  the y-axis the realized covariances with rearranged returns. ", "", "<h5>3.3  Minimum-variance portfolios ", "", "We show the usefulness of using rearranged returns, compared to using raw returns, in the  context of an exercise to rebalance a portfolio to minimize daily variance.  Stock returns determine the weights that minimize the portfolio variance. The optimal  weights for a particular day minimize the portfolio variance, subject to the constraints that  they deliver a given expected return and that they sum to one (Markowitz, 1952): ", "<p>Minimize ", "<s8>w", "<s14>d ", "<p>\u03c3", "<s8>2  p,d", "<p>=  w", "<s8>\u2032  d", "<p>C", "<s8>d", "<p>w", "<s8>d", "<p>,  s.t.  w", "<s8>\u2032  d", "<p>\u00b5  =  \u00b5", "<s8>p,d", "<p>and  w", "<s8>\u2032  d", "1 ,  (31) ", "<p>in which  \u03c3", "<s8>2  p,d", "<p>is the daily variance of the portfolio return,  w", "<s8>d", "<p> = ( w", "<s8>1 ,d", "<p>, ..., w", "<s8>p,d", "<p>)", "<s8>\u22a4", "<p>is the daily  p -dimensional weight vector,  C", "<s8>d", "<p> is the daily realized covariance matrix and  \u00b5", "<s8>p,d", " is the target  portfolio return. We make a grid of 100 target returns that range from the lowest average  DJIA stock return to the highest one. To test our synchronization procedure, we compare a  simulated portfolio\u2019s performance using raw vs. rearranged returns to compute the realized  covariance matrix.  We optimize weights (31) on rearrangement days,  i.e.  the 184 ETF jump days for which  we rearrange jumps and use those weights to rebalance the portfolio the next day. We keep  those weights until the next rearrangement day. In those cases when the Dow constituency  changes in between rearrangement days, we reset to an equally weighted portfolio until the  next rearrangement day.  Table 1 reports the portfolios\u2019 closing value, standard deviation and modi\ufb01ed Sharpe  ratio at the 5% level and the  p -value of their di\ufb00erence (Ardia and Boudt, 2015) for the full  sample and for each year. For 12 of 14 years and over the whole sample, the rearranged-return  portfolio statistics are superior to the raw-returns portfolio statistics in terms of the modi\ufb01ed  Sharpe ratio. Over the full sample, the modi\ufb01ed Sharpe ratios are signi\ufb01cantly di\ufb00erent and  the rearranged-return portfolio delivers an additional 5% performance. ", "22 ", "Table 1: Performance of minimum-variance portfolios ", "", "<s3>Days  #CJ  #CJ-R  Closing value  SD  mSharpe ", "<s3>Raw  Rearr.  Raw  Rearr.  Raw  Rearr.  p -value ", "<s3>Full period  3,264  1,163  184  1.8500  1.9000  0.7410  0.7410  0.0159  0.0178  0.0879 ", "<s3>Year-by-year ", "<s3>2007  246  57  13  1.0191  1.0294  0.5592  0.5652  0.0357  0.0430  0.2520 ", "<s3>2008  247  55  6  0.9900  0.9880  1.5156  1.5043  0.0377  0.0378  0.9970 ", "<s3>2009  243  68  11  1.0607  1.0684  0.9220  0.9254  -0.0127  -0.0110  0.2700 ", "<s3>2010  247  65  5  1.0213  1.0384  0.6292  0.6324  -0.0373  -0.0295  0.0919 ", "<s3>2011  247  72  6  1.1505  1.1537  0.6268  0.6219  0.0628  0.0644  0.5500 ", "<s3>2012  245  107  8  0.9439  0.9493  0.5045  0.5056  -0.0634  -0.0609  0.2950 ", "<s3>2013  245  90  13  1.1049  1.0965  0.4865  0.4864  -0.0034  -0.0101  0.1130 ", "<s3>2014  247  78  15  1.2607  1.2510  0.4790  0.4730  0.2310  0.2260  0.5180 ", "<s3>2015  247  72  9  1.0135  1.0211  0.6918  0.6843  -0.0061  -0.0006  0.4530 ", "<s3>2016  249  101  14  1.1480  1.1482  0.5113  0.5109  0.0118  0.0119  0.9860 ", "<s3>2017  247  133  23  1.1220  1.1234  0.2977  0.2986  0.0692  0.0709  0.6880 ", "<s3>2018  245  93  14  0.9231  0.9310  0.8102  0.8278  0.0254  0.0302  0.4400 ", "<s3>2019  246  140  42  1.0817  1.0921  0.5076  0.5123  -0.0028  0.0040  0.2380 ", "<s3>2020  63  32  5  1.0135  1.0140  1.5388  1.5407  -0.0021  -0.0017  0.8820 ", "", "<s2>Note: This table reports the performance of the daily returns of a minimum-variance portfolio  optimization with raw  vs.  rearranged returns.  From left to right, the columns report the  number of days (Days), the number of ETF jumps or cojump days (#CJ) and the number of  cojump days on which the rearrangement moves stock jumps (#CJ-R). \u201cClosing value\u201d is the  end-of-sample portfolio value if the initial value was  $ 1 using cumulative daily returns. \u201cSD\u201d  and \u201cmSharpe\u201d are the standard deviations and modi\ufb01ed Sharpe ratios and the  p -value of their  di\ufb00erence (Ardia and Boudt, 2015) of the portfolio over the sample. Gray cells denote the higher  of the two performance statistics. Dark gray cells denote statistically signi\ufb01cant superiority at  the 10% level. To calculate the modi\ufb01ed Sharpe ratio, we use excess returns  vs.  the DIA ETF.  We rely on the studentized circular bootstrap approach, with 1000 bootstrap replications and a  block length of 5, to infer the statistical signi\ufb01cance of di\ufb00erences in Sharpe ratios. ", "", "We recommend using rearranged returns rather than raw returns. These synchronized  returns are more precise in a high-frequency analysis of market reactions around jumps. ", "", "<h3>4  Concluding remarks ", "", "In a panel of intraday stock returns, sampled on a \ufb01ne sampling grid, jumps occur at close but  distinct points in time. We introduce tools to synchronize the scattered jumps and better  approximate the common jump. The rearrangement is currently very practical, requiring  only a few seconds for a rearrangement problem with 30 stocks.  Estimating realized covariance matrices with synchronized stock returns, as opposed to  raw returns, improves out-of-sample portfolio performance. Recovering the common jump on  a \ufb01ne sampling grid is likely to improve other asset allocation and risk management decisions,  like estimating the jump size distribution (see  e.g. , Boudt et al., 2011a), estimating jump  dependence (see  e.g. , Li, Todorov, Tauchen, and Chen, 2017; Li, Todorov, and Tauchen, 2017;  Li, Todorov, Tauchen, and Lin, 2019) or forecasting realized measures (see  e.g. , Andersen  et al., 2007; Bollerslev et al. 2020; Bollerslev et al., 2022). A more thorough analysis must,  however, await future work. ", "23 ", "", "<h3>References ", "", "A\u00a8  \u0131t-Sahalia, Y. (2004).  Disentangling di\ufb00usion from jumps.  Journal of Financial Eco-  nomics 74 (3), 487\u2013528. ", "A\u00a8  \u0131t-Sahalia, Y. and J. Jacod (2014).  High-frequency \ufb01nancial econometrics . Princeton Uni-  versity Press. ", "Andersen, T. G., T. Bollerslev, and F. X. Diebold (2007). Roughing it up: Including jump  components in the measurement, modeling, and forecasting of return volatility.  Review of  Economics and Statistics 89 (4), 701\u2013720. ", "Ardia, D. and K. Boudt (2015). Testing equality of modi\ufb01ed sharpe ratios.  Finance Research  Letters 13 , 97\u2013104. ", "Bajgrowicz, P., O. Scaillet, and A. Treccani (2016). Jumps in high-frequency data: Spurious  detections, dynamics, and news.  Management Science 62 (8), 2198\u20132217. ", "Bandi, F. M., D. Pirino, and R. Ren`  o (2017). Excess idle time.  Econometrica 85 (6), 1793\u2013  1846. ", "Barndor\ufb00-Nielsen, O. E., P. R. Hansen, A. Lunde, and N. Shephard (2009). Realized kernels  in practice: Trades and quotes.  Econometrics Journal 12 (3), C1\u2013C32. ", "Barndor\ufb00-Nielsen, O. E., P. R. Hansen, A. Lunde, and N. Shephard (2011). Multivariate  realised kernels: consistent positive semi-de\ufb01nite estimators of the covariation of equity  prices with noise and non-synchronous trading.  Journal of Econometrics 162 (2), 149\u2013169. ", "Barndor\ufb00-Nielsen, O. E. and N. Shephard (2004). Econometric analysis of realized covaria-  tion: High frequency based covariance, regression, and correlation in \ufb01nancial economics.  Econometrica 72 (3), 885\u2013925. ", "Bernard, C., O. Bondarenko, and S. Vandu\ufb00el (2018). Rearrangement algorithm and maxi-  mum entropy.  Annals of Operations Research 261 (1), 107\u2013134. ", "Bernard, C., L. R\u00a8  uschendorf, and S. Vandu\ufb00el (2017). Value-at-risk bounds with variance  constraints.  Journal of Risk and Insurance 84 (3), 923\u2013959. ", "Bollerslev, T., T. H. Law, and G. Tauchen (2008). Risk, jumps, and diversi\ufb01cation.  Journal  of Econometrics 144 (1), 234\u2013256. ", "Bollerslev, T., J. Li, A. J. Patton, and R. Quaedvlieg (2020).  Realized semicovariances.  Econometrica 88 (4), 1515\u20131551. ", "Bollerslev, T., A. J. Patton, and R. Quaedvlieg (2022). Realized semibetas: Disentangling  \u201cgood\u201d and \u201cbad\u201d downside risks.  Journal of Financial Economics 144 (1), 227\u2013246. ", "Bondarenko, O. and C. Bernard (2023). Option-implied dependence and correlation risk  premium.  Journal of Financial and Quantitative Analysis , 1\u201351. ", "Boudt, K., C. Croux, and S. Laurent (2011a). Outlyingness weighted covariation.  Journal  of Financial Econometrics 9 (4), 657\u2013684. ", "24 ", "Boudt, K., C. Croux, and S. Laurent (2011b). Robust estimation of intraweek periodicity in  volatility and jump detection.  Journal of Empirical Finance 18 (2), 353\u2013367. ", "Boudt, K., E. Jakobsons, and S. Vandu\ufb00el (2018). Block rearranging elements within matrix  columns to minimize the variability of the row sums.  4OR 16 (1), 31\u201350. ", "Boudt, K., S. Laurent, A. Lunde, R. Quaedvlieg, and O. Sauri (2017). Positive semide\ufb01nite  integrated covariance estimation, factorizations and asynchronicity.  Journal of Economet-  rics 196 (2), 347\u2013367. ", "Christensen, K., R. C. Oomen, and M. Podolskij (2014). Fact or friction: Jumps at ultra  high frequency.  Journal of Financial Economics 114 (3), 576\u2013599. ", "Christensen, K., A. Timmermann, and B. Veliyev (2023). Warp speed price moves: Jumps  after earnings announcements.  Available at SSRN 4422376 . ", "Embrechts, P., G. Puccetti, and L. R\u00a8  uschendorf (2013). Model uncertainty and VaR aggre-  gation.  Journal of Banking & Finance 37 (8), 2750\u20132764. ", "Epps, T. W. (1979). Comovements in stock prices in the very short run.  Journal of the  American Statistical Association 74 (366a), 291\u2013298. ", "Jondeau, E., S.-H. Poon, and M. Rockinger (2007).  Financial modeling under non-Gaussian  distributions . Springer Science & Business Media. ", "Lahaye, J., S. Laurent, and C. J. Neely (2011). Jumps, cojumps and macro announcements.  Journal of Applied Econometrics 26 (6), 893\u2013921. ", "Lee, S. S. and P. A. Mykland (2008). Jumps in \ufb01nancial markets: A new nonparametric test  and jump dynamics.  Review of Financial Studies 21 (6), 2535\u20132563. ", "Lee, S. S. and P. A. Mykland (2012). Jumps in equilibrium prices and market microstructure  noise.  Journal of Econometrics 168 (2), 396\u2013406. ", "Li, J., V. Todorov, and G. Tauchen (2017). Jump regressions.  Econometrica 85 (1), 173\u2013195. ", "Li, J., V. Todorov, G. Tauchen, and R. Chen (2017). Mixed-scale jump regressions with  bootstrap inference.  Journal of Econometrics 201 (2), 417\u2013432. ", "Li, J., V. Todorov, G. Tauchen, and H. Lin (2019). Rank tests at jump events.  Journal of  Business & Economic Statistics 37 (2), 312\u2013321. ", "Li, Z. M. and O. Linton (2022). A ReMeDI for microstructure noise.  Econometrica 90 (1),  367\u2013389. ", "Markowitz, H. (1952). Portfolio selection*.  Journal of Finance 7 (1), 77\u201391. ", "Puccetti, G. and L. R\u00a8  uschendorf (2012). Computation of sharp bounds on the distribution of  a function of dependent risks.  Journal of Computational and Applied Mathematics 236 (7),  1833\u20131840. ", "25 ", "", "<h3>A  Simulating sluggish news reactions ", "", "<p>We show how to generate a sample path from the new DGP, in which the discontinuous  component is spread across several time intervals. We \ufb01rst simulate second-by-second (\u2206", "<s8>n", "<p> =  1 / 23 ,  401) e\ufb03cient log prices (1) for 1 stock ( p  = 1),  X", "<s8>i \u2206", "<s14>n", ", across one trading day ( T  = 1)  from a jump-di\ufb00usion process. ", "", "<h5>A.1  The continuous component ", "", "<p>The continuous component,  X", "<s8>c  i \u2206", "<s14>n", "<p>, has a zero drift and constant variance  \u03c3", "<s8>2  t", "<p>= 0 . 039, cor-  responding to an annualized return volatility of 20%. We add  i.i.d.  microstructure noise  u , with  E [ u ] = 0 and  E [ u", "<s8>2", "<p>] =  \u03c9", "<s8>2", "<p>, in which we select  \u03c9", "<s8>2", "<p>by \ufb01xing the noise ratio to  \u03b3  = ( n\u03c9", "<s8>2", "<p>/\u03c3", "<s8>2  t", "<p>) ", "<s14>1", "<s8>/", "<s14>2", " = 0 . 5, to contaminate the continuous part of the e\ufb03cient price (as in ", "Christensen et al., 2014). ", "", "<h5>A.2  The discontinuous component ", "", "Econometricians typically assume a compound Poisson for the e\ufb03cient jump process: ", "<p>X", "<s8>d  i \u2206", "<s14>n", ":= ", "", "<s8>N", "<s14>J ", "X ", "", "<s8>j =1 ", "<p>I", "<s8>{ U", "<s14>j", "<s8>\u00b7 T \u2264 i \u2206", "<s14>n", "<s8>}", "<p>\u2206 X", "<s8>j", ",  (32) ", "<p>in which  I ( \u00b7 ) is an indicator function,  N", "<s8>J", "<p>is the number of jumps that occur during a day,  U", "<s8>j ", "<p>are the random arrival times of the jumps and the sequence of normally distributed random  variables, \u2206 X", "<s8>1", "<p>, ...,  \u2206 X", "<s8>N", "<s14>J", "<p>, are normally distributed jump sizes.  The news that generates the jump in the e\ufb03cient price is not immediately impounded in  the stock\u2019s observed price. To simulate such a sluggish news reaction, we draw a contaminated  jump process,  Y", "<s8>d  i \u2206", "<s14>n", "<p>, which includes a step function that spreads each individual e\ufb03cient jump  size, \u2206 X", "<s8>j", ", within the compound Poisson process (32), across several time intervals: ", "<p>Y", "<s8>d  i \u2206", "<s14>n", ":= ", "", "<s8>N", "<s14>J ", "X ", "", "<s8>j =1 ", "<p>I", "<s8>{ U", "<s14>j", "<s8>\u00b7 T \u2264 i \u2206", "<s14>n", "<s8>} ", "<s8>N", "<s14>D  j ", "X ", "", "<s8>d =0 ", "<p>I", "<s8>{ W", "<s14>j,d", "<s8>\u00b7 T \u2264 i \u2206", "<s14>n", "<s8>}", "<p>\u2206 L", "<s8>j,d ", "", "<p>|  {z  } ", "<s8>Progress to e\ufb03ciency ", "", "<p>\u2206 X", "<s8>j", ",  (33) ", "<p>in which  N", "<s8>D  j", "<p>governs the total number of steps within each jump\u2019s delay process,  W", "<s8>j, 0", "<p>, ..., W", "<s8>j,N", "<s14>D  j ", "<p>are the step arrival times and \u2206 L", "<s8>j, 0", "<p>, ...,  \u2206 L", "<s8>j,N", "<s14>D  j", "<p>are increments in the step sizes, which add  chunks of the e\ufb03cient jump size, \u2206 X", "<s8>j", "<p>, to the observed jump process,  Y", "<s8>d", ". The step function  captures the progress to e\ufb03ency; it rises from 0 to 1 as information about the e\ufb03cient jump  is fully incorporated in the stock\u2019s observed price. ", "A.2.1  Step widths ", "<p>Suppose an e\ufb03cient price jumps at the random arrival time,  U", "<s8>j", "<p>, with a jump size, \u2206 X", "<s8>j", "<p>. To  simulate the step function within for this particular jump, we \ufb01rst draw the number of steps,  N", "<s8>D  j", ", from a binomial distribution: ", "<p>N", "<s8>D  j", "\u223c Bin(Number of trials = 5 ,  Success probability = 0 . 4) ,  for  j  \ufb01xed . ", "26 ", "Each of the steps has a random width. An exponential distribution governs the waiting  times between the steps: ", "<p>w", "<s8>j,d", "<p> \u223c\u2308 Exp[Rate = 1 / (15  N", "<s8>D  j", "<p>)] \u2309 ,  for  j  \ufb01xed and  d  = 1 , ..., N", "<s8> D  j", ", ", "<p>in which  \u2308\u00b7\u2309 is the ceiling operator. The step arrival times,  W", "<s8>j,d", "<p>, in the indicator function of  the compound information process are the cumulative sums of the waiting times starting at  the arrival time of the e\ufb03cient jump  U", "<s8>j", ": ", "<p>W", "<s8>j, 0", "<p> \u00b7  T  :=  U", "<s8>j", "<p> \u00b7  T  ,  W", "<s8>j, 1", "<p> \u00b7  T  :=  U", "<s8>j", "<p> \u00b7  T  + w", "<s8>j, 1", "<p>,  W", "<s8>j, 1", "<p> \u00b7  T  :=  U", "<s8>j", "<p> \u00b7  T  + w", "<s8>j, 1", "<p> +  w", "<s8>j, 2", "<p>,  .  .  .  W", "<s8>j,N", "<s14>D  j", "<p>\u00b7  T  :=  U", "<s8>j", "<p> \u00b7  T  + D", "<s8>j", ". ", "<p>The starting point of the step function,  W", "<s8>j, 0", "<p>, is the arrival time of the e\ufb03cient jump. The end  point,  W", "<s8>j,N", "<s14>D  j", ", or the moment when the information has been fully impounded, is the starting  point plus the sum of the waiting times. The total delay with which the e\ufb03cient stock jump ", "<p>is impounded in the observed price is the sum of the waiting times:  D", "<s8>j", "<p> = P", "<s8>N", "<s14>D  j ", "<s8>d =1", "<p>w", "<s8>j,d", ".  If it  takes more steps to incorporate the e\ufb03cient jump, the total delay will be longer. ", "A.2.2  Step sizes ", "<p>The steps also have random sizes that correspond to accumulated information impounded in  the observed price. To extract the sizes,  L", "<s8>j,d", "<p>, of each step  d , with  d  = 0 , ..., N", "<s8>D  j", "<p>, we sample  realizations from a Brownian bridge according to the step arrival times,  W", "<s8>j, 0", "<p>, ..., W", "<s8>j,N", "<s14>D  j", ". ", "The Brownian bridge ", "<p>The Brownian bridge models the latent news impoundment process. When news is released,  the market processes and accumulates information, including under- and overreactions. Even-  tually, the price fully and correctly impounds the information.  The Brownian bridge, \u039b", "<s8>j,t", ", is a continuous-time, stochastic process de\ufb01ned as: ", "<p>\u039b", "<s8>j,t", "<p> =  B", "<s8>j,t", " \u2212  t ", "<p>U", "<s8>j", "<p> \u00b7  T  +  D", "<s8>j ", "", "<p>\u0000  1  \u2212 B", "<s8>j,U", "<s14>j", "<s8>\u00b7 T + D", "<s14>j", "<s8>) ", "<p>\u0001  ,  t  \u2208 [ U", "<s8>j", "<p> \u00b7  T, U", "<s8>j", "<p> \u00b7  T  +  D", "<s8>j", "] ", "<p>in which  B", "<s8>j,t", "<p> is a standard, univariate Wiener process, with  B", "<s8>j, 0", "<p> = 0. A standard Wiener  process is tied down to the origin, but the other points are not restricted. The Brownian  bridge is pinned at both ends interval, at  t  =  U", "<s8>j", "<p> \u00b7  T  and  t  =  U", "<s8>j", "<p> \u00b7  T  +  D", "<s8>j", "<p>. Just as pylons  support a literal bridge, the pylons in the Brownian bridge make sure that the process evolves  from the \ufb01rst pylon \u039b", "<s8>j,U", "<s14>j", "<s8>\u00b7 T", "<p> = 0 to the second pylon \u039b", "<s8>j,U", "<s14>j", "<s8>\u00b7 T + D", "<s14>j", " = 1. ", "Sampling step sizes from the Brownian bridge ", "<p>The variable governed by the Brownian bridge gradually moves from 0 to 1 \u2013 non-  monotonically \u2013 but we observe its values at discrete intervals, because investors impound  chunks of new information in the observed price at each interval. We sample the step sizes  from the Brownian bridge process \u039b", "<s8>j,t", "<p> at discrete points,  W", "<s8>j, 0", "<p>, W", "<s8>j, 1", "<p>, ..., W", "<s8>j,N", "<s14>D  j", ".  The Brownian bridge and the waiting times exist in continuously observed prices and are  functions of the data generating features that delay jumps. They have nothing to do with  the data frequency used by the econometrician. ", "27 ", "A.2.3  Example of a step function ", "<p>Figure 8 plots an example of such a step function for one delayed jump. The e\ufb03cient stock  price jumps at  i \u2206", "<s8>n", "<p> = 11 ,  701 or 12:45:00. The waiting times between each of three steps  are equal to  w", "<s8>1 , 1", "<p> = 34 , w", "<s8>1 , 2", "<p> = 29 , w", "<s8>1 , 3", "<p> = 49 seconds. In the following  D", "<s8>j", "<p> = 112 seconds, the  Brownian bridge (in black) process evolves from 0 to 1. If \u039b", "<s8>j,i \u2206", "<s14>n", "<p> <  1, the observed price  jump underreacts and does not (completely) incorporate the new information. If \u039b", "<s8>j,i \u2206", "<s14>n", "<p> >  1,  the observed price overreacts to the jump. At the end of the interval, when \u039b", "<s8>j,i \u2206", "<s14>n", "<p> = 1, the  observed stock jump equals the e\ufb03cient stock jump.  We do not observe this learning process in continuous time.  Rather, we sample the  step sizes at the waiting times, leading to the step function (in blue). The waiting times  relate to the step widths and are equal to  W", "<s8>1 , 0", "<p> \u00b7  T  = 11 ,  701 + 0,  W", "<s8>1 , 1", "<p> \u00b7  T  = 11 ,  701 + 34,  W", "<s8>1 , 2", "<p> \u00b7  T  = 11 ,  701 + 63 and  W", "<s8>1 , 3", "<p> \u00b7  T  = 11 ,  701 + 112. The sampled sizes are equal to 0 . 000,  0 . 512, 0 . 826, and 1 . 000 and the increments are equal to \u2206 L", "<s8>1 , 0", "<p> = 0 . 000, \u2206 L", "<s8>1 , 1", "<p> = 0 . 512,  \u2206 L", "<s8>1 , 2", "<p> = 0 . 314, and \u2206 L", "<s8>1 , 3", " = 0 . 174. The information increments should sum to 1. This step  process manifests as a gradual jump in the observed price as we saw in the methodology  section. ", "Figure 8: A step function captures the speed with which observed prices incorporate new  information ", "", "<s10>0.0  0.2  0.4  0.6  0.8  1.0  1.2 ", "<s10>Learning process ", "<s10>12:44:30  12:45:00  12:45:30  12:46:00  12:46:30  12:47:00 ", "<s10>Brownian bridge  Step process ", "", "<s2>Note: This \ufb01gure plots a sample path of the step function we use to contaminate an e\ufb03cient  jump. The e\ufb03cient stock price jumps at  i \u2206", "<s8>n", "<s2> = 11 ,  701 or 12:45:00. The waiting times between  each of three steps are equal to  w", "<s8>1 , 1", "<s2> = 34 , w", "<s8>1 , 2", "<s2> = 29 , w", "<s8>1 , 3", "<s2> = 49 seconds. The sampled sizes  are equal to 0 . 000, 0 . 512, 0 . 826, and 1 . 000 and the increments are equal to \u2206 L", "<s8>1 , 0", "<s2> = 0 . 000,  \u2206 L", "<s8>1 , 1", "<s2> = 0 . 512, \u2206 L", "<s8>1 , 2", "<s2> = 0 . 314, and \u2206 L", "<s8>1 , 3", "<s2> = 0 . 174. ", "", "<h3>B  The vanilla rearrangement algorithm ", "", "Suppose that we want to rearrange the jump-event matrix of size  h  \u00d7  q . The rearrangement  algorithm of Puccetti and R\u00a8  uschendorf (2012) and Embrechts et al. (2013) loops over each  column in a matrix to order it oppositely to the sum of the other columns. If the matrix has  a \ufb01xed target in the last column (see  e.g. , Bernard et al., 2018, 2017), the algorithm is as  follows: ", "28 ", "1. Randomly shu\ufb04e the elements (in each of the \ufb01rst  q \u2212 1 columns) to obtain the starting  matrix of the algorithm: ", "\u0393 = ", "\uf8ee ", "\uf8ef  \uf8ef  \uf8f0 ", "0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 210  0 . 000  0 . 400 ", "<p>0 . 000  0 . 217  0 . 000  |  {z  } ", "<s8>Weighted  jump  stock returns ", "", "<p>\u2212 0 . 002  0 . 003  \u2212 0 . 807  0 . 004  \u2212 0 . 028  | {z } ", "<s8>Target ", "", "\uf8f9 ", "<p>\uf8fa  \uf8fa  \uf8fb ", "<s8>Random ", "<p>\u2212  \u2212  \u2212  \u2212  \u2192 ", "<s8>Shu\ufb04e ", "", "\uf8ee ", "\uf8ef  \uf8ef  \uf8f0 ", "0 . 000  0 . 000  0 . 000  0 . 210  0 . 000  0 . 000  0 . 000  0 . 000  0 . 400 ", "<p>0 . 000  0 . 217  0 . 000  0 . 000  0 . 000  0 . 000  |  {z  } ", "<s8>Rearranged  weighted  jump  stock returns ", "", "<p>\u2212 0 . 002  0 . 003  \u2212 0 . 807  0 . 004  \u2212 0 . 028  | {z } ", "<s8>Target ", "", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fb ", "<p>2. Iteratively rearrange the  l -th column in the rearranged matrix  J", "<s8>\u03c0  n", "so that it becomes  oppositely ordered to the sum of the other columns, for  l  = 1 , ..., q  \u2212 1. We never  rearrange the target column,  l  =  q . For  l  = 1, the algorithm immediately matches the  stock jump with the ETF jump:  \uf8ee ", "\uf8ef  \uf8ef  \uf8f0 ", "0 . 000  0 . 000  0 . 000  0 . 210  0 . 000  0 . 000  0 . 000  0 . 000  0 . 400 ", "<p>0 . 000  0 . 217  0 . 000  0 . 000  0 . 000  0 . 000  |  {z  } ", "<s8>Rearranged  weighted  jump  stock returns ", "", "<p>\u2212 0 . 002  0 . 003  \u2212 0 . 807  0 . 004  \u2212 0 . 028  | {z } ", "<s8>Target ", "", "\uf8f9 ", "<p>\uf8fa  \uf8fa  \uf8fb ", "<s8>Oppositely ", "<p>\u2212  \u2212  \u2212  \u2212  \u2212  \u2212  \u2192 ", "<s8>order ", "", "\uf8ee ", "\uf8ef  \uf8ef  \uf8f0 ", "0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 000  0 . 210  0 . 000  0 . 400 ", "<p>0 . 000  0 . 217  0 . 000  0 . 000  0 . 000  0 . 000  |  {z  } ", "<s8>Rearranged  weighted  jump  stock returns ", "", "<p>\u2212 0 . 002  0 . 003  \u2212 0 . 807  0 . 004  \u2212 0 . 028  | {z } ", "<s8>Target ", "", "\uf8f9 ", "\uf8fa  \uf8fa  \uf8fb ", "<p>3. Repeat Step 2 until no further changes occur. That is, until a matrix \u0393", "<s8>\u03c0", "is found with  each column oppositely ordered to the sum of the other columns. ", "29 "]